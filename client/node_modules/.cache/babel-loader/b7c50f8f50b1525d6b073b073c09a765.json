{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\client\\\\src\\\\components\\\\AllyGrid.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst grid = [];\n\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nconst neighborsMoves = [[0, -1], [-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1]];\n\nfunction errorHandle(shipsObjRefCurrent) {\n  shipsObjRefCurrent.style.borderColor = \"red\";\n  setTimeout(() => shipsObjRefCurrent.style.borderColor = \"blue\", 500);\n  return false;\n}\n\nfunction multidimensionalIncludes(multidimensionalArray, searchArray) {\n  return multidimensionalArray.some(row => JSON.stringify(row) === JSON.stringify(searchArray));\n}\n\nexport default function AllyGrid(props) {\n  const gridSize = props.gridSize;\n\n  function handleDrop(e, dropRow, dropCol) {\n    e.stopPropagation();\n    e.preventDefault();\n    const currentShipName = currentShipRef.current;\n    const shipObj = ships[currentShipName];\n    const shipsObjRefCurrent = shipObj.reference.current;\n    const grabX = grabXRef.current;\n    const grabY = grabYRef.current;\n    const placeX = dropCol * gridSize - grabX * gridSize + 8;\n    const placeY = dropRow * gridSize - grabY * gridSize + 8;\n    const placeCol = Math.floor(placeX / gridSize);\n    const placeRow = Math.floor(placeY / gridSize);\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        if (placeCol > 10 - shipObj.size || placeCol < 0) return errorHandle(shipsObjRefCurrent);\n        break;\n\n      case \"vertical\":\n        if (placeRow > 10 - shipObj.size || placeRow < 0) return errorHandle(shipsObjRefCurrent);\n        break;\n\n      default:\n        return console.warn(\"ship have wrong orientation in dropHandle misplace check\");\n    }\n\n    let shipsCopy = Object.assign({}, ships);\n    let newMap = [];\n    let newNeighbors = [];\n\n    switch (shipObj.orientation) {\n      case \"vertical\":\n        for (let i = 0; i < shipObj.size; i++) {\n          const row = placeRow + i;\n          const col = placeCol;\n          const newMapPair = [row, col];\n\n          for (const shipName in ships) {\n            if (shipName !== currentShipName) {\n              if (multidimensionalIncludes(shipsCopy[shipName].neighbors, newMapPair)) return errorHandle(shipsObjRefCurrent);\n            }\n          }\n\n          newMap.push(newMapPair);\n        }\n\n        break;\n\n      case \"horizontal\":\n        for (let i = 0; i < shipObj.size; i++) {\n          const row = placeRow;\n          const col = placeCol + i;\n          const newMapPair = [row, col];\n\n          for (const shipName in ships) {\n            if (shipName !== currentShipName) {\n              if (multidimensionalIncludes(shipsCopy[shipName].neighbors, newMapPair)) return errorHandle(shipsObjRefCurrent);\n            }\n          }\n\n          newMap.push(newMapPair);\n        }\n\n        break;\n\n      default:\n        return console.warn(\"ship have wrong orientation in dropHandle, newMap loop\");\n    }\n\n    shipsCopy[currentShipName].map = newMap; // calculate new neighbors\n\n    newMap.forEach(coords => {\n      neighborsMoves.forEach(move => {\n        const neighborsRow = coords[0] + move[0];\n        const neighborsCol = coords[1] + move[1];\n        const neighborsArray = [neighborsRow, neighborsCol];\n        if (neighborsRow >= 0 && neighborsRow <= 9 && neighborsCol >= 0 && neighborsCol <= 9) if (!multidimensionalIncludes(newNeighbors, neighborsArray) && !multidimensionalIncludes(newMap, neighborsArray)) newNeighbors.push(neighborsArray);\n      });\n    });\n    shipsCopy[currentShipName].neighbors = newNeighbors;\n    shipsCopy[currentShipName].position.x = placeX;\n    shipsCopy[currentShipName].position.y = placeY;\n    shipsCopy[currentShipName].isPlaced = true;\n    setShips(shipsCopy);\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AllyGrid\",\n      style: {\n        display: \"grid\",\n        width: `${gridSize * 10}px`,\n        gridTemplateColumns: `repeat(10,${gridSize}px)`,\n        gridTemplateRows: `repeat(10,${gridSize}px)`\n      },\n      children: generateGridDivs()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), generateShipDivs(), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: () => {\n        for (const shipName in ships) {\n          if (!ships[shipName].isPlaced) {\n            console.log(\"not all ships placed\");\n            return;\n          }\n        }\n\n        console.log(\"field is ready for game!\");\n      },\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = AllyGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllyGrid\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/client/src/components/AllyGrid.js"],"names":["React","grid","i","push","Array","from","neighborsMoves","errorHandle","shipsObjRefCurrent","style","borderColor","setTimeout","multidimensionalIncludes","multidimensionalArray","searchArray","some","row","JSON","stringify","AllyGrid","props","gridSize","handleDrop","e","dropRow","dropCol","stopPropagation","preventDefault","currentShipName","currentShipRef","current","shipObj","ships","reference","grabX","grabXRef","grabY","grabYRef","placeX","placeY","placeCol","Math","floor","placeRow","orientation","size","console","warn","shipsCopy","Object","assign","newMap","newNeighbors","col","newMapPair","shipName","neighbors","map","forEach","coords","move","neighborsRow","neighborsCol","neighborsArray","position","x","y","isPlaced","setShips","display","width","gridTemplateColumns","gridTemplateRows","generateGridDivs","generateShipDivs","right","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst grid = [];\r\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\r\n\r\nconst neighborsMoves = [\r\n  [0, -1],\r\n  [-1, -1],\r\n  [-1, 0],\r\n  [-1, 1],\r\n  [0, 1],\r\n  [1, 1],\r\n  [1, 0],\r\n  [1, -1],\r\n];\r\n\r\nfunction errorHandle(shipsObjRefCurrent) {\r\n  shipsObjRefCurrent.style.borderColor = \"red\";\r\n  setTimeout(() => (shipsObjRefCurrent.style.borderColor = \"blue\"), 500);\r\n  return false;\r\n}\r\n\r\nfunction multidimensionalIncludes(multidimensionalArray, searchArray) {\r\n  return multidimensionalArray.some(\r\n    (row) => JSON.stringify(row) === JSON.stringify(searchArray)\r\n  );\r\n}\r\n\r\nexport default function AllyGrid(props) {\r\n  const gridSize = props.gridSize;\r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  function handleDrop(e, dropRow, dropCol) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    const currentShipName = currentShipRef.current;\r\n    const shipObj = ships[currentShipName];\r\n    const shipsObjRefCurrent = shipObj.reference.current;\r\n\r\n    const grabX = grabXRef.current;\r\n    const grabY = grabYRef.current;\r\n\r\n    const placeX = dropCol * gridSize - grabX * gridSize + 8;\r\n    const placeY = dropRow * gridSize - grabY * gridSize + 8;\r\n\r\n    const placeCol = Math.floor(placeX / gridSize);\r\n    const placeRow = Math.floor(placeY / gridSize);\r\n\r\n    switch (shipObj.orientation) {\r\n      case \"horizontal\":\r\n        if (placeCol > 10 - shipObj.size || placeCol < 0)\r\n          return errorHandle(shipsObjRefCurrent);\r\n        break;\r\n\r\n      case \"vertical\":\r\n        if (placeRow > 10 - shipObj.size || placeRow < 0)\r\n          return errorHandle(shipsObjRefCurrent);\r\n        break;\r\n\r\n      default:\r\n        return console.warn(\r\n          \"ship have wrong orientation in dropHandle misplace check\"\r\n        );\r\n    }\r\n\r\n    let shipsCopy = Object.assign({}, ships);\r\n\r\n    let newMap = [];\r\n    let newNeighbors = [];\r\n\r\n    switch (shipObj.orientation) {\r\n      case \"vertical\":\r\n        for (let i = 0; i < shipObj.size; i++) {\r\n          const row = placeRow + i;\r\n          const col = placeCol;\r\n          const newMapPair = [row, col];\r\n          for (const shipName in ships) {\r\n            if (shipName !== currentShipName) {\r\n              if (\r\n                multidimensionalIncludes(\r\n                  shipsCopy[shipName].neighbors,\r\n                  newMapPair\r\n                )\r\n              )\r\n                return errorHandle(shipsObjRefCurrent);\r\n            }\r\n          }\r\n          newMap.push(newMapPair);\r\n        }\r\n        break;\r\n      case \"horizontal\":\r\n        for (let i = 0; i < shipObj.size; i++) {\r\n          const row = placeRow;\r\n          const col = placeCol + i;\r\n          const newMapPair = [row, col];\r\n          for (const shipName in ships) {\r\n            if (shipName !== currentShipName) {\r\n              if (\r\n                multidimensionalIncludes(\r\n                  shipsCopy[shipName].neighbors,\r\n                  newMapPair\r\n                )\r\n              )\r\n                return errorHandle(shipsObjRefCurrent);\r\n            }\r\n          }\r\n          newMap.push(newMapPair);\r\n        }\r\n        break;\r\n      default:\r\n        return console.warn(\r\n          \"ship have wrong orientation in dropHandle, newMap loop\"\r\n        );\r\n    }\r\n    shipsCopy[currentShipName].map = newMap;\r\n\r\n    // calculate new neighbors\r\n    newMap.forEach((coords) => {\r\n      neighborsMoves.forEach((move) => {\r\n        const neighborsRow = coords[0] + move[0];\r\n        const neighborsCol = coords[1] + move[1];\r\n        const neighborsArray = [neighborsRow, neighborsCol];\r\n        if (\r\n          neighborsRow >= 0 &&\r\n          neighborsRow <= 9 &&\r\n          neighborsCol >= 0 &&\r\n          neighborsCol <= 9\r\n        )\r\n          if (\r\n            !multidimensionalIncludes(newNeighbors, neighborsArray) &&\r\n            !multidimensionalIncludes(newMap, neighborsArray)\r\n          )\r\n            newNeighbors.push(neighborsArray);\r\n      });\r\n    });\r\n    shipsCopy[currentShipName].neighbors = newNeighbors;\r\n\r\n    shipsCopy[currentShipName].position.x = placeX;\r\n    shipsCopy[currentShipName].position.y = placeY;\r\n\r\n    shipsCopy[currentShipName].isPlaced = true;\r\n    setShips(shipsCopy);\r\n\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"AllyGrid\"\r\n        style={{\r\n          display: \"grid\",\r\n          width: `${gridSize * 10}px`,\r\n          gridTemplateColumns: `repeat(10,${gridSize}px)`,\r\n          gridTemplateRows: `repeat(10,${gridSize}px)`,\r\n        }}\r\n      >\r\n        {generateGridDivs()}\r\n      </div>\r\n      {generateShipDivs()}\r\n      <button\r\n        style={{ position: \"absolute\", right: 0 }}\r\n        onClick={() => {\r\n          for (const shipName in ships) {\r\n            if (!ships[shipName].isPlaced) {\r\n              console.log(\"not all ships placed\");\r\n              return;\r\n            }\r\n          }\r\n          console.log(\"field is ready for game!\");\r\n        }}\r\n      >\r\n        Ready\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}