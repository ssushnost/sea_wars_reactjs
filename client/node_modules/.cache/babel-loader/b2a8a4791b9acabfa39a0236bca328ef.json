{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Grid from \"./components/Grid.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridSize = 20;\n\nfunction App() {\n  _s();\n\n  function handleMouseClick(e, shipName) {\n    if (e.button !== 2) return;\n    const shipObj = ships[shipName];\n    console.dir(shipObj);\n    const shipMap = shipObj.map;\n    const shipObjRefCurrent = shipObj.reference.current;\n    let shipsCopy = Object.assign({}, ships);\n\n    if (shipObj.isPlaced) {\n      var row = shipMap[0][0];\n      var col = shipMap[0][1];\n\n      switch (shipObj.orientation) {\n        case \"vertical\":\n          if (col > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n\n        case \"horizontal\":\n          if (row > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n    }\n\n    let allNeighborsExceptCurrentShip = [];\n\n    for (const ship in ships) {\n      if (ship !== shipName) {\n        ships[ship].neighbors.forEach(neighborPair => allNeighborsExceptCurrentShip.push(neighborPair));\n      }\n    }\n\n    let newMap = [];\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (multidimensionalIncludes(allNeighborsExceptCurrentShip, [row + i, col])) return errorHandle(shipObjRefCurrent);\n          newMap.push([row + i, col]);\n        }\n\n        shipsCopy[shipName].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (multidimensionalIncludes(allNeighborsExceptCurrentShip, [row, col + i])) return errorHandle(shipObjRefCurrent);\n          newMap.push([row, col + i]);\n        }\n\n        shipsCopy[shipName].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    shipsCopy[shipName].map = newMap;\n    let newNeighbors = [];\n    newMap.forEach(coords => {\n      neighborsMoves.forEach(move => {\n        const neighborsRow = coords[0] + move[0];\n        const neighborsCol = coords[1] + move[1];\n        const neighborsArray = [neighborsRow, neighborsCol];\n        if (neighborsRow >= 0 && neighborsRow <= 9 && neighborsCol >= 0 && neighborsCol <= 9) if (!multidimensionalIncludes(newNeighbors, neighborsArray) && !multidimensionalIncludes(newMap, neighborsArray)) newNeighbors.push(neighborsArray);\n      });\n    });\n    shipsCopy[shipName].neighbors = newNeighbors;\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return console.log(\"Not all ships placed\");\n    }\n\n    console.log(\"field is ready for game!\");\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_2: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 280\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_1: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_2: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 260\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_3: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 310\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_1: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_2: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 240\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_3: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 270\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_4: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 300\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    }\n  });\n  let shipDivs = [];\n\n  for (const ship in ships) {\n    shipDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships[ship].reference,\n      className: ship,\n      draggable: true,\n      onDragEnd: e => ships[ship].reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships[ship].reference.current.style.display = \"none\");\n        currentShipRef.current = ship;\n        const diffX = e.clientX - ships[ship].position.x;\n        const diffY = e.clientY - ships[ship].position.y;\n        grabXRef.current = parseInt(diffX / gridSize);\n        grabYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, ship),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships[ship].position.x,\n        top: ships[ship].position.y,\n        width: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, ship, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this));\n  }\n\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      width: \"500px\",\n      height: \"500px\"\n    },\n    children: [shipDivs, /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: readyCheck,\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AKqWwLbRF+EujNQCNECMLq1/N24=\");\n\n_c = App;\nexport default App; // .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/App.js"],"names":["React","Grid","gridSize","App","handleMouseClick","e","shipName","button","shipObj","ships","console","dir","shipMap","map","shipObjRefCurrent","reference","current","shipsCopy","Object","assign","isPlaced","row","col","orientation","size","errorHandle","warn","allNeighborsExceptCurrentShip","ship","neighbors","forEach","neighborPair","push","newMap","i","multidimensionalIncludes","newNeighbors","coords","neighborsMoves","move","neighborsRow","neighborsCol","neighborsArray","setShips","deepListCopy","l","JSON","parse","stringify","readyCheck","log","useState","ship4","useRef","position","x","y","ship3_1","ship3_2","ship2_1","ship2_2","ship2_3","ship1_1","ship1_2","ship1_3","ship1_4","shipDivs","style","display","setTimeout","currentShipRef","diffX","clientX","diffY","clientY","grabXRef","parseInt","grabYRef","preventDefault","left","top","width","height","border","cursor","right"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"./components/Grid.js\";\n\nconst gridSize = 20;\n\n\n\nfunction App() {\n  function handleMouseClick(e, shipName) {\n    if (e.button !== 2) return;\n\n    const shipObj = ships[shipName];\n    console.dir(shipObj);\n    const shipMap = shipObj.map;\n    const shipObjRefCurrent = shipObj.reference.current;\n\n    let shipsCopy = Object.assign({}, ships);\n\n    if (shipObj.isPlaced) {\n      var row = shipMap[0][0];\n      var col = shipMap[0][1];\n\n      switch (shipObj.orientation) {\n        case \"vertical\":\n          if (col > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n        case \"horizontal\":\n          if (row > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n    }\n\n    let allNeighborsExceptCurrentShip = [];\n    for (const ship in ships) {\n      if (ship !== shipName) {\n        ships[ship].neighbors.forEach((neighborPair) =>\n          allNeighborsExceptCurrentShip.push(neighborPair)\n        );\n      }\n    }\n\n    let newMap = [];\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (\n            multidimensionalIncludes(allNeighborsExceptCurrentShip, [\n              row + i,\n              col,\n            ])\n          )\n            return errorHandle(shipObjRefCurrent);\n          newMap.push([row + i, col]);\n        }\n\n        shipsCopy[shipName].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (\n            multidimensionalIncludes(allNeighborsExceptCurrentShip, [\n              row,\n              col + i,\n            ])\n          )\n            return errorHandle(shipObjRefCurrent);\n          newMap.push([row, col + i]);\n        }\n\n        shipsCopy[shipName].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    shipsCopy[shipName].map = newMap;\n\n    let newNeighbors = [];\n\n    newMap.forEach((coords) => {\n      neighborsMoves.forEach((move) => {\n        const neighborsRow = coords[0] + move[0];\n        const neighborsCol = coords[1] + move[1];\n        const neighborsArray = [neighborsRow, neighborsCol];\n        if (\n          neighborsRow >= 0 &&\n          neighborsRow <= 9 &&\n          neighborsCol >= 0 &&\n          neighborsCol <= 9\n        )\n          if (\n            !multidimensionalIncludes(newNeighbors, neighborsArray) &&\n            !multidimensionalIncludes(newMap, neighborsArray)\n          )\n            newNeighbors.push(neighborsArray);\n      });\n    });\n    shipsCopy[shipName].neighbors = newNeighbors;\n\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return console.log(\"Not all ships placed\");\n    }\n    console.log(\"field is ready for game!\");\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: { x: 10, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: { x: 100, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship3_2: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: { x: 100, y: 280 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship2_1: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: { x: 170, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship2_2: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: { x: 170, y: 260 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship2_3: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: { x: 170, y: 310 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_1: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_2: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 240 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_3: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 270 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_4: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 300 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n  });\n\n  let shipDivs = [];\n\n  for (const ship in ships) {\n    shipDivs.push(\n      <div\n        ref={ships[ship].reference}\n        key={ship}\n        className={ship}\n        draggable\n        onDragEnd={(e) =>\n          (ships[ship].reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships[ship].reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = ship;\n          const diffX = e.clientX - ships[ship].position.x;\n          const diffY = e.clientY - ships[ship].position.y;\n          grabXRef.current = parseInt(diffX / gridSize);\n          grabYRef.current = parseInt(diffY / gridSize);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, ship)}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships[ship].position.x,\n          top: ships[ship].position.y,\n          width: (() => {\n            switch (ships[ship].orientation) {\n              case \"horizontal\":\n                return `${gridSize * ships[ship].size - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships[ship].orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${gridSize * ships[ship].size - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n    );\n  }\n\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        width: \"500px\",\n        height: \"500px\",\n      }}\n    >\n      {shipDivs}\n      <button style={{ position: \"absolute\", right: 0 }} onClick={readyCheck}>\n        Ready\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n"]},"metadata":{},"sourceType":"module"}