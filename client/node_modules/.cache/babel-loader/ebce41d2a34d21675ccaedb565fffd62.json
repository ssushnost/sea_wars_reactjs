{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet grid = [];\n\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nlet gridSize = 20;\n\nfunction errorHandle(shipsObjRefCurrent) {\n  shipsObjRefCurrent.style.borderColor = \"red\";\n  setTimeout(() => shipsObjRefCurrent.style.borderColor = \"blue\", 500);\n}\n\nfunction App() {\n  _s();\n\n  function handleDrop(e, dropRow, dropCol) {\n    e.stopPropagation();\n    e.preventDefault();\n    let isShipPlacedOutsideGrid = false;\n    const grabX = grabXRef.current;\n    const grabY = grabYRef.current;\n    const placeX = dropCol * gridSize - grabX * gridSize + 8;\n    const placeCol = Math.floor((dropCol * gridSize - grabX * gridSize + 8) / gridSize);\n    const placeRow = Math.floor((dropRow * gridSize - grabY * gridSize + 8) / gridSize);\n    const currentShipName = currentShipRef.current;\n    const shipObj = ships[currentShipName];\n    const shipsObjRefCurrent = shipObj.reference.current;\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        if (placeCol > 10 - shipObj.size || placeCol < 0) {\n          errorHandle(shipsObjRefCurrent);\n          isShipPlacedOutsideGrid = true;\n        }\n\n        break;\n\n      case \"vertical\":\n        if (placeRow > 10 - shipObj.size || placeRow < 0) {\n          errorHandle(shipsObjRefCurrent);\n          isShipPlacedOutsideGrid = true;\n        }\n\n        break;\n\n      default:\n        console.warn(\"wrong orientation in \");\n    }\n\n    if (!isShipPlacedOutsideGrid) {\n      let shipsCopy = Object.assign({}, ships);\n      shipsCopy[currentShipName].position.x = dropCol * gridSize - grabX * gridSize + 8;\n      shipsCopy[currentShipName].position.y = dropRow * gridSize - grabY * gridSize + 8;\n      let newMap = [];\n      let startCol = parseInt(shipsCopy[currentShipName].position.x / gridSize, 10);\n      let startRow = parseInt(shipsCopy[currentShipName].position.y / gridSize, 10);\n\n      for (let i = 0; i < shipObj.size; i++) {\n        switch (shipObj.orientation) {\n          case \"vertical\":\n            newMap.push([startRow + i, startCol]);\n            break;\n\n          case \"horizontal\":\n            newMap.push([startRow, startCol + i]);\n            break;\n\n          default:\n            console.warn(\"ship have wrong orientation\");\n        }\n      }\n\n      shipsCopy[currentShipName].map = newMap;\n      shipsCopy[currentShipName].isPlaced = true;\n      setShips(shipsCopy);\n    }\n\n    console.log(ships);\n    return false;\n  }\n\n  function handleMouseClick(e, ship) {\n    if (e.button !== 2) return;\n    let shipsCopy = Object.assign({}, ships);\n\n    if (ships[ship].isPlaced) {\n      var row = ships[ship].map[0][0];\n      var col = ships[ship].map[0][1];\n\n      switch (ships[ship].orientation) {\n        case \"vertical\":\n          if (col > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(() => ships[ship].reference.current.style.borderColor = \"blue\", 500);\n            return;\n          }\n\n          break;\n\n        case \"horizontal\":\n          if (row > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(() => ships[ship].reference.current.style.borderColor = \"blue\", 500);\n            return;\n          }\n\n          break;\n\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n\n      shipsCopy[ship].map = [];\n    }\n\n    switch (shipsCopy[ship].orientation) {\n      case \"horizontal\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row + i, col]);\n          }\n        }\n\n        shipsCopy[ship].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row, col + i]);\n          }\n        }\n\n        shipsCopy[ship].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    console.dir(ships);\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return false;\n      console.log(\"field is ready for game!\");\n    }\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 210\n      },\n      map: [],\n      isPlaced: false\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 240\n      },\n      map: [],\n      isPlaced: false\n    }\n  });\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: \"blanchedalmond\",\n      width: \"500px\",\n      height: \"500px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GridContainer\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(10,20px)\",\n        backgroundColor: \"lightblue\"\n      },\n      children: grid.map((row, i) => row.map((col, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spot\",\n        onDragStart: e => e.preventDefault(),\n        onDragOver: e => {\n          e.preventDefault();\n          return false;\n        },\n        onDrop: e => handleDrop(e, i, j),\n        style: {\n          backgroundColor: \"white\",\n          height: \"18px\",\n          width: \"18px\",\n          border: \"solid 1px black\"\n        }\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships.ship4.reference,\n      className: \"ship4\",\n      draggable: true,\n      onDragEnd: e => ships.ship4.reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships.ship4.reference.current.style.display = \"none\");\n        currentShipRef.current = \"ship4\";\n        const diffX = e.clientX - ships.ship4.position.x;\n        const diffY = e.clientY - ships.ship4.position.y;\n        grabXRef.current = parseInt(diffX / gridSize);\n        grabYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, \"ship4\"),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships.ship4.position.x,\n        top: ships.ship4.position.y,\n        width: (() => {\n          switch (ships.ship4.orientation) {\n            case \"horizontal\":\n              return `${gridSize * 4 - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships.ship4.orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * 4 - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships.ship3_1.reference,\n      className: \"ship3_1\",\n      draggable: true,\n      onDragEnd: e => ships.ship3_1.reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships.ship3_1.reference.current.style.display = \"none\");\n        currentShipRef.current = \"ship3_1\";\n        const diffX = e.clientX - ships.ship3_1.position.x;\n        const diffY = e.clientY - ships.ship3_1.position.y;\n        grabXRef.current = parseInt(diffX / gridSize);\n        grabYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, \"ship3_1\"),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships.ship3_1.position.x,\n        top: ships.ship3_1.position.y,\n        width: (() => {\n          switch (ships.ship3_1.orientation) {\n            case \"horizontal\":\n              return `${gridSize * 3 - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships.ship3_1.orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * 3 - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: readyCheck,\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tuZPLQK4bbEX2bS9SLRIXx/CFE0=\");\n\n_c = App;\nexport default App; // .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/App.js"],"names":["React","grid","i","push","Array","from","gridSize","errorHandle","shipsObjRefCurrent","style","borderColor","setTimeout","App","handleDrop","e","dropRow","dropCol","stopPropagation","preventDefault","isShipPlacedOutsideGrid","grabX","grabXRef","current","grabY","grabYRef","placeX","placeCol","Math","floor","placeRow","currentShipName","currentShipRef","shipObj","ships","reference","orientation","size","console","warn","shipsCopy","Object","assign","position","x","y","newMap","startCol","parseInt","startRow","map","isPlaced","setShips","log","handleMouseClick","ship","button","row","col","dir","deepListCopy","l","JSON","parse","stringify","readyCheck","useState","ship4","useRef","ship3_1","backgroundColor","width","height","display","gridTemplateColumns","j","border","diffX","clientX","diffY","clientY","left","top","cursor","right"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nlet grid = [];\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nlet gridSize = 20;\n\nfunction errorHandle(shipsObjRefCurrent) {\n  shipsObjRefCurrent.style.borderColor = \"red\";\n  setTimeout(() => (shipsObjRefCurrent.style.borderColor = \"blue\"), 500);\n}\n\nfunction App() {\n  function handleDrop(e, dropRow, dropCol) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    let isShipPlacedOutsideGrid = false;\n\n    const grabX = grabXRef.current;\n    const grabY = grabYRef.current;\n\n    const placeX = dropCol * gridSize - grabX * gridSize + 8;\n\n    const placeCol = Math.floor(\n      (dropCol * gridSize - grabX * gridSize + 8) / gridSize\n    );\n\n    const placeRow = Math.floor(\n      (dropRow * gridSize - grabY * gridSize + 8) / gridSize\n    );\n\n    const currentShipName = currentShipRef.current;\n    const shipObj = ships[currentShipName];\n    const shipsObjRefCurrent = shipObj.reference.current;\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        if (placeCol > 10 - shipObj.size || placeCol < 0) {\n          errorHandle(shipsObjRefCurrent);\n          isShipPlacedOutsideGrid = true;\n        }\n        break;\n      case \"vertical\":\n        if (placeRow > 10 - shipObj.size || placeRow < 0) {\n          errorHandle(shipsObjRefCurrent);\n          isShipPlacedOutsideGrid = true;\n        }\n        break;\n      default:\n        console.warn(\"wrong orientation in \");\n    }\n    if (!isShipPlacedOutsideGrid) {\n      let shipsCopy = Object.assign({}, ships);\n\n      shipsCopy[currentShipName].position.x =\n        dropCol * gridSize - grabX * gridSize + 8;\n      shipsCopy[currentShipName].position.y =\n        dropRow * gridSize - grabY * gridSize + 8;\n\n      let newMap = [];\n\n      let startCol = parseInt(\n        shipsCopy[currentShipName].position.x / gridSize,\n        10\n      );\n\n      let startRow = parseInt(\n        shipsCopy[currentShipName].position.y / gridSize,\n        10\n      );\n\n      for (let i = 0; i < shipObj.size; i++) {\n        switch (shipObj.orientation) {\n          case \"vertical\":\n            newMap.push([startRow + i, startCol]);\n            break;\n          case \"horizontal\":\n            newMap.push([startRow, startCol + i]);\n            break;\n          default:\n            console.warn(\"ship have wrong orientation\");\n        }\n      }\n\n      shipsCopy[currentShipName].map = newMap;\n      shipsCopy[currentShipName].isPlaced = true;\n      setShips(shipsCopy);\n    }\n    console.log(ships);\n    return false;\n  }\n\n  function handleMouseClick(e, ship) {\n    if (e.button !== 2) return;\n    let shipsCopy = Object.assign({}, ships);\n    if (ships[ship].isPlaced) {\n      var row = ships[ship].map[0][0];\n      var col = ships[ship].map[0][1];\n      switch (ships[ship].orientation) {\n        case \"vertical\":\n          if (col > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(\n              () => (ships[ship].reference.current.style.borderColor = \"blue\"),\n              500\n            );\n            return;\n          }\n          break;\n        case \"horizontal\":\n          if (row > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(\n              () => (ships[ship].reference.current.style.borderColor = \"blue\"),\n              500\n            );\n            return;\n          }\n          break;\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n      shipsCopy[ship].map = [];\n    }\n    switch (shipsCopy[ship].orientation) {\n      case \"horizontal\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row + i, col]);\n          }\n        }\n        shipsCopy[ship].orientation = \"vertical\";\n        break;\n      case \"vertical\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row, col + i]);\n          }\n        }\n        shipsCopy[ship].orientation = \"horizontal\";\n        break;\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n    console.dir(ships);\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return false;\n      console.log(\"field is ready for game!\");\n    }\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: { x: 10, y: 210 },\n      map: [],\n      isPlaced: false,\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: { x: 10, y: 240 },\n      map: [],\n      isPlaced: false,\n    },\n  });\n\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundColor: \"blanchedalmond\",\n        width: \"500px\",\n        height: \"500px\",\n      }}\n    >\n      <div\n        className=\"GridContainer\"\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(10,20px)\",\n          backgroundColor: \"lightblue\",\n        }}\n      >\n        {grid.map((row, i) =>\n          row.map((col, j) => (\n            <div\n              className=\"spot\"\n              key={`${i}-${j}`}\n              onDragStart={(e) => e.preventDefault()}\n              onDragOver={(e) => {\n                e.preventDefault();\n                return false;\n              }}\n              onDrop={(e) => handleDrop(e, i, j)}\n              style={{\n                backgroundColor: \"white\",\n                height: \"18px\",\n                width: \"18px\",\n                border: \"solid 1px black\",\n              }}\n            />\n          ))\n        )}\n      </div>\n      <div\n        ref={ships.ship4.reference}\n        className=\"ship4\"\n        draggable\n        onDragEnd={(e) =>\n          (ships.ship4.reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships.ship4.reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = \"ship4\";\n          const diffX = e.clientX - ships.ship4.position.x;\n          const diffY = e.clientY - ships.ship4.position.y;\n          grabXRef.current = parseInt(diffX / gridSize);\n          grabYRef.current = parseInt(diffY / gridSize);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, \"ship4\")}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships.ship4.position.x,\n          top: ships.ship4.position.y,\n          width: (() => {\n            switch (ships.ship4.orientation) {\n              case \"horizontal\":\n                return `${gridSize * 4 - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships.ship4.orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${gridSize * 4 - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n      <div\n        ref={ships.ship3_1.reference}\n        className=\"ship3_1\"\n        draggable\n        onDragEnd={(e) =>\n          (ships.ship3_1.reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships.ship3_1.reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = \"ship3_1\";\n          const diffX = e.clientX - ships.ship3_1.position.x;\n          const diffY = e.clientY - ships.ship3_1.position.y;\n          grabXRef.current = parseInt(diffX / gridSize);\n          grabYRef.current = parseInt(diffY / gridSize);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, \"ship3_1\")}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships.ship3_1.position.x,\n          top: ships.ship3_1.position.y,\n          width: (() => {\n            switch (ships.ship3_1.orientation) {\n              case \"horizontal\":\n                return `${gridSize * 3 - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships.ship3_1.orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${gridSize * 3 - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n      <button style={{ position: \"absolute\", right: 0 }} onClick={readyCheck}>\n        Ready\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n"]},"metadata":{},"sourceType":"module"}