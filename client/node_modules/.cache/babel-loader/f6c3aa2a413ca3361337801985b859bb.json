{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet grid = [];\n\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nlet gridSize = gridSize;\n\nfunction App() {\n  _s();\n\n  function handleDrop(e, dropRow, dropCol) {\n    e.stopPropagation();\n    e.preventDefault();\n    let isShipPlasedOutsideGrid = false;\n    [grabX, grabY] = grabStartCoords.current;\n    console.log(grabX);\n    const placeCol = Math.floor((dropCol * gridSize + 8 - diffXRef.current * gridSize) / gridSize);\n    const placeRow = Math.floor((gridCellRow * gridSize + 8 - diffYRef.current * gridSize) / gridSize);\n    const currentShipName = currentShipRef.current;\n\n    if (ships[currentShipRef.current].orientation === \"horizontal\") {\n      if (colForBool > 10 - ships[currentShipRef.current].size || colForBool < 0) {\n        ships[currentShipRef.current].reference.current.style.borderColor = \"red\";\n        setTimeout(() => ships[currentShipRef.current].reference.current.style.borderColor = \"blue\", 500);\n        isShipPlasedOutsideGrid = true;\n      }\n    } else if (ships[currentShipRef.current].orientation === \"vertical\") {\n      if (rowForBool > 10 - ships[currentShipRef.current].size || rowForBool < 0) {\n        ships[currentShipRef.current].reference.current.style.borderColor = \"red\";\n        setTimeout(() => ships[currentShipRef.current].reference.current.style.borderColor = \"blue\", 500);\n        isShipPlasedOutsideGrid = true;\n      }\n    }\n\n    if (!isShipPlasedOutsideGrid) {\n      //string eg. \"ship4\"\n      let ship = currentShipRef.current;\n      let shipSize = ships[ship].size;\n      let shipOrientation = ships[ship].orientation;\n      let shipsCopy = Object.assign({}, ships);\n      shipsCopy[ship].position.x = gridCellColumn * gridSize + 8 - diffXRef.current * gridSize;\n      shipsCopy[ship].position.y = gridCellRow * gridSize + 8 - diffYRef.current * gridSize;\n      let newMap = [];\n      let col = parseInt(shipsCopy[ship].position.x / gridSize, 10);\n      let row = parseInt(shipsCopy[ship].position.y / gridSize, 10);\n\n      for (let i = 0; i < shipSize; i++) {\n        switch (shipOrientation) {\n          case \"vertical\":\n            newMap.push([row + i, col]);\n            break;\n\n          case \"horizontal\":\n            newMap.push([row, col + i]);\n            break;\n\n          default:\n            console.warn(\"ship have wrong orientation\");\n        }\n      }\n\n      shipsCopy[ship].map = newMap;\n      shipsCopy[ship].isPlaced = true;\n      setShips(shipsCopy);\n    }\n\n    return false;\n  }\n\n  function handleMouseClick(e, ship) {\n    if (e.button !== 2) return;\n    let shipsCopy = Object.assign({}, ships);\n\n    if (ships[ship].isPlaced) {\n      var row = ships[ship].map[0][0];\n      var col = ships[ship].map[0][1];\n\n      switch (ships[ship].orientation) {\n        case \"vertical\":\n          if (col > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(() => ships[ship].reference.current.style.borderColor = \"blue\", 500);\n            return;\n          }\n\n          break;\n\n        case \"horizontal\":\n          if (row > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(() => ships[ship].reference.current.style.borderColor = \"blue\", 500);\n            return;\n          }\n\n          break;\n\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n\n      shipsCopy[ship].map = [];\n    }\n\n    switch (shipsCopy[ship].orientation) {\n      case \"horizontal\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row + i, col]);\n          }\n        }\n\n        shipsCopy[ship].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row, col + i]);\n          }\n        }\n\n        shipsCopy[ship].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    console.dir(ships);\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return false;\n      console.log(\"field is ready for game!\");\n    }\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 210\n      },\n      map: [],\n      isPlaced: false\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 240\n      },\n      map: [],\n      isPlaced: false\n    }\n  });\n  const currentShipRef = React.useRef();\n  const grabStartCoords = {\n    x: React.useRef(),\n    y: React.useRef()\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: \"blanchedalmond\",\n      width: \"500px\",\n      height: \"500px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GridContainer\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(10,20px)\",\n        backgroundColor: \"lightblue\"\n      },\n      children: grid.map((row, i) => row.map((col, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spot\",\n        onDragStart: e => e.preventDefault(),\n        onDragOver: e => {\n          e.preventDefault();\n          return false;\n        },\n        onDrop: e => handleDrop(e, i, j),\n        style: {\n          backgroundColor: \"white\",\n          height: \"18px\",\n          width: \"18px\",\n          border: \"solid 1px black\"\n        }\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships.ship4.reference,\n      className: \"ship4\",\n      draggable: true,\n      onDragEnd: e => ships.ship4.reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships.ship4.reference.current.style.display = \"none\");\n        currentShipRef.current = \"ship4\";\n        const diffX = e.clientX - ships.ship4.position.x;\n        const diffY = e.clientY - ships.ship4.position.y;\n        diffXRef.current = parseInt(diffX / gridSize);\n        diffYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, \"ship4\"),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships.ship4.position.x,\n        top: ships.ship4.position.y,\n        width: (() => {\n          switch (ships.ship4.orientation) {\n            case \"horizontal\":\n              return `${gridSize * 4 - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships.ship4.orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * 4 - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships.ship3_1.reference,\n      className: \"ship3_1\",\n      draggable: true,\n      onDragEnd: e => ships.ship3_1.reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships.ship3_1.reference.current.style.display = \"none\");\n        currentShipRef.current = \"ship3_1\";\n        const diffX = e.clientX - ships.ship3_1.position.x;\n        const diffY = e.clientY - ships.ship3_1.position.y;\n        diffXRef.current = parseInt(diffX / gridSize);\n        diffYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, \"ship3_1\"),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships.ship3_1.position.x,\n        top: ships.ship3_1.position.y,\n        width: (() => {\n          switch (ships.ship3_1.orientation) {\n            case \"horizontal\":\n              return `${gridSize * 3 - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships.ship3_1.orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * 3 - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: readyCheck,\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UIocOo91abgS8lObCI6b8Dz0R3E=\");\n\n_c = App;\nexport default App; // .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/App.js"],"names":["React","grid","i","push","Array","from","gridSize","App","handleDrop","e","dropRow","dropCol","stopPropagation","preventDefault","isShipPlasedOutsideGrid","grabX","grabY","grabStartCoords","current","console","log","placeCol","Math","floor","diffXRef","placeRow","gridCellRow","diffYRef","currentShipName","currentShipRef","ships","orientation","colForBool","size","reference","style","borderColor","setTimeout","rowForBool","ship","shipSize","shipOrientation","shipsCopy","Object","assign","position","x","gridCellColumn","y","newMap","col","parseInt","row","warn","map","isPlaced","setShips","handleMouseClick","button","dir","deepListCopy","l","JSON","parse","stringify","readyCheck","useState","ship4","useRef","ship3_1","backgroundColor","width","height","display","gridTemplateColumns","j","border","diffX","clientX","diffY","clientY","left","top","cursor","right"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nlet grid = [];\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nlet gridSize = gridSize;\n\nfunction App() {\n  function handleDrop(e, dropRow, dropCol) {\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    let isShipPlasedOutsideGrid = false;\n\n    [grabX, grabY] = grabStartCoords.current\n    console.log(grabX)\n    \n    const placeCol = Math.floor(\n      (dropCol * gridSize + 8 - diffXRef.current * gridSize) / gridSize\n    );\n\n    const placeRow = Math.floor(\n      (gridCellRow * gridSize + 8 - diffYRef.current * gridSize) / gridSize\n    );\n    const currentShipName = currentShipRef.current;\n    if (ships[currentShipRef.current].orientation === \"horizontal\") {\n      if (\n        colForBool > 10 - ships[currentShipRef.current].size ||\n        colForBool < 0\n      ) {\n        ships[currentShipRef.current].reference.current.style.borderColor =\n          \"red\";\n        setTimeout(\n          () =>\n            (ships[currentShipRef.current].reference.current.style.borderColor =\n              \"blue\"),\n          500\n        );\n        isShipPlasedOutsideGrid = true;\n      }\n    } else if (ships[currentShipRef.current].orientation === \"vertical\") {\n      if (\n        rowForBool > 10 - ships[currentShipRef.current].size ||\n        rowForBool < 0\n      ) {\n        ships[currentShipRef.current].reference.current.style.borderColor =\n          \"red\";\n        setTimeout(\n          () =>\n            (ships[currentShipRef.current].reference.current.style.borderColor =\n              \"blue\"),\n          500\n        );\n        isShipPlasedOutsideGrid = true;\n      }\n    }\n    if (!isShipPlasedOutsideGrid) {\n      //string eg. \"ship4\"\n      let ship = currentShipRef.current;\n      let shipSize = ships[ship].size;\n      let shipOrientation = ships[ship].orientation;\n      let shipsCopy = Object.assign({}, ships);\n      shipsCopy[ship].position.x =\n        gridCellColumn * gridSize + 8 - diffXRef.current * gridSize;\n      shipsCopy[ship].position.y = gridCellRow * gridSize + 8 - diffYRef.current * gridSize;\n      let newMap = [];\n      let col = parseInt(shipsCopy[ship].position.x / gridSize, 10);\n      let row = parseInt(shipsCopy[ship].position.y / gridSize, 10);\n      for (let i = 0; i < shipSize; i++) {\n        switch (shipOrientation) {\n          case \"vertical\":\n            newMap.push([row + i, col]);\n            break;\n          case \"horizontal\":\n            newMap.push([row, col + i]);\n            break;\n          default:\n            console.warn(\"ship have wrong orientation\");\n        }\n      }\n      shipsCopy[ship].map = newMap;\n      shipsCopy[ship].isPlaced = true;\n      setShips(shipsCopy);\n    }\n    return false;\n  }\n\n  function handleMouseClick(e, ship) {\n    if (e.button !== 2) return;\n    let shipsCopy = Object.assign({}, ships);\n    if (ships[ship].isPlaced) {\n      var row = ships[ship].map[0][0];\n      var col = ships[ship].map[0][1];\n      switch (ships[ship].orientation) {\n        case \"vertical\":\n          if (col > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(\n              () => (ships[ship].reference.current.style.borderColor = \"blue\"),\n              500\n            );\n            return;\n          }\n          break;\n        case \"horizontal\":\n          if (row > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(\n              () => (ships[ship].reference.current.style.borderColor = \"blue\"),\n              500\n            );\n            return;\n          }\n          break;\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n      shipsCopy[ship].map = [];\n    }\n    switch (shipsCopy[ship].orientation) {\n      case \"horizontal\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row + i, col]);\n          }\n        }\n        shipsCopy[ship].orientation = \"vertical\";\n        break;\n      case \"vertical\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row, col + i]);\n          }\n        }\n        shipsCopy[ship].orientation = \"horizontal\";\n        break;\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n    console.dir(ships);\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return false;\n      console.log(\"field is ready for game!\");\n    }\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: { x: 10, y: 210 },\n      map: [],\n      isPlaced: false,\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: { x: 10, y: 240 },\n      map: [],\n      isPlaced: false,\n    },\n  });\n\n  const currentShipRef = React.useRef();\n  const grabStartCoords = { x: React.useRef(), y: React.useRef() };\n\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundColor: \"blanchedalmond\",\n        width: \"500px\",\n        height: \"500px\",\n      }}\n    >\n      <div\n        className=\"GridContainer\"\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(10,20px)\",\n          backgroundColor: \"lightblue\",\n        }}\n      >\n        {grid.map((row, i) =>\n          row.map((col, j) => (\n            <div\n              className=\"spot\"\n              key={`${i}-${j}`}\n              onDragStart={(e) => e.preventDefault()}\n              onDragOver={(e) => {\n                e.preventDefault();\n                return false;\n              }}\n              onDrop={(e) => handleDrop(e, i, j)}\n              style={{\n                backgroundColor: \"white\",\n                height: \"18px\",\n                width: \"18px\",\n                border: \"solid 1px black\",\n              }}\n            />\n          ))\n        )}\n      </div>\n      <div\n        ref={ships.ship4.reference}\n        className=\"ship4\"\n        draggable\n        onDragEnd={(e) =>\n          (ships.ship4.reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships.ship4.reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = \"ship4\";\n          const diffX = e.clientX - ships.ship4.position.x;\n          const diffY = e.clientY - ships.ship4.position.y;\n          diffXRef.current = parseInt(diffX / gridSize);\n          diffYRef.current = parseInt(diffY / gridSize);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, \"ship4\")}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships.ship4.position.x,\n          top: ships.ship4.position.y,\n          width: (() => {\n            switch (ships.ship4.orientation) {\n              case \"horizontal\":\n                return `${gridSize * 4 - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships.ship4.orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${gridSize * 4 - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n      <div\n        ref={ships.ship3_1.reference}\n        className=\"ship3_1\"\n        draggable\n        onDragEnd={(e) =>\n          (ships.ship3_1.reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships.ship3_1.reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = \"ship3_1\";\n          const diffX = e.clientX - ships.ship3_1.position.x;\n          const diffY = e.clientY - ships.ship3_1.position.y;\n          diffXRef.current = parseInt(diffX / gridSize);\n          diffYRef.current = parseInt(diffY / gridSize);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, \"ship3_1\")}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships.ship3_1.position.x,\n          top: ships.ship3_1.position.y,\n          width: (() => {\n            switch (ships.ship3_1.orientation) {\n              case \"horizontal\":\n                return `${gridSize * 3 - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships.ship3_1.orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${gridSize * 3 - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n      <button style={{ position: \"absolute\", right: 0 }} onClick={readyCheck}>\n        Ready\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n"]},"metadata":{},"sourceType":"module"}