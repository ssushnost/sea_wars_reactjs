{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\components\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Grid() {\n  _s();\n\n  const [grid, setGrid] = useState(() => {\n    const temp = [];\n\n    for (let i = 0; i < 10; i++) temp.push(Array.from(Array(10), () => \"e\"));\n\n    return temp;\n  }); // function placeShips() {\n  //   let gridCopy = deepListCopy(grid);\n  //   gridCopy[5][1] = \"s\";\n  //   gridCopy[6][1] = \"s\";\n  //   gridCopy[7][1] = \"s\";\n  //   gridCopy[8][1] = \"s\";\n  //   gridCopy[8][3] = \"s\";\n  //   gridCopy[8][4] = \"s\";\n  //   gridCopy[8][5] = \"s\";\n  //   gridCopy[6][3] = \"s\";\n  //   gridCopy[6][4] = \"s\";\n  //   gridCopy[6][5] = \"s\";\n  //   gridCopy[7][7] = \"s\";\n  //   gridCopy[6][7] = \"s\";\n  //   gridCopy[4][7] = \"s\";\n  //   gridCopy[4][6] = \"s\";\n  //   gridCopy[2][2] = \"s\";\n  //   gridCopy[2][1] = \"s\";\n  //   gridCopy[1][5] = \"s\";\n  //   gridCopy[1][8] = \"s\";\n  //   gridCopy[4][3] = \"s\";\n  //   gridCopy[9][9] = \"s\";\n  //   setGrid(gridCopy);\n  // }\n\n  useEffect(() => {//placeShips();\n  }, []);\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function gridOnClickHandler(ri, ci) {\n    let gridCopy = deepListCopy(grid);\n\n    if (grid[ri][ci] === \"s\") {\n      gridCopy[ri][ci] = \"h\";\n      setGrid(gridCopy);\n    } else if (grid[ri][ci] === \"e\") {\n      gridCopy[ri][ci] = \"m\";\n      setGrid(gridCopy);\n    }\n  } // function handleColor(spot) {\n  //   if (spot === \"h\") return \"pink\";\n  //   if (spot === \"m\") return \"gray\";\n  //   else return \"white\";\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(10,20px)\",\n      backgroundColor: \"lightblue\"\n    },\n    children: grid.map((row, i) => row.map((col, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spot\",\n      onClick: () => gridOnClickHandler(i, j),\n      style: {\n        backgroundColor: handleColor(grid[i][j]),\n        //\n        height: \"18px\",\n        width: \"18px\",\n        border: \"solid 1px black\"\n      }\n    }, `${i}-${j}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Grid, \"EjgV5AVkIGbUIiniOGU1MncGJHE=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/components/Grid.js"],"names":["useEffect","useState","Grid","grid","setGrid","temp","i","push","Array","from","deepListCopy","l","JSON","parse","stringify","gridOnClickHandler","ri","ci","gridCopy","display","gridTemplateColumns","backgroundColor","map","row","col","j","handleColor","height","width","border"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,MAAM;AACrC,UAAMI,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6BD,IAAI,CAACE,IAAL,CAAUC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAhB,EAAsB,MAAM,GAA5B,CAAV;;AAC7B,WAAOH,IAAP;AACD,GAJ+B,CAAhC,CADc,CAOd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAL,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,WAASU,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,CAAf,CAAX,CAAP;AACD;;AAED,WAASI,kBAAT,CAA4BC,EAA5B,EAAgCC,EAAhC,EAAoC;AAClC,QAAIC,QAAQ,GAAGR,YAAY,CAACP,IAAD,CAA3B;;AACA,QAAIA,IAAI,CAACa,EAAD,CAAJ,CAASC,EAAT,MAAiB,GAArB,EAA0B;AACxBC,MAAAA,QAAQ,CAACF,EAAD,CAAR,CAAaC,EAAb,IAAmB,GAAnB;AACAb,MAAAA,OAAO,CAACc,QAAD,CAAP;AACD,KAHD,MAGO,IAAIf,IAAI,CAACa,EAAD,CAAJ,CAASC,EAAT,MAAiB,GAArB,EAA0B;AAC/BC,MAAAA,QAAQ,CAACF,EAAD,CAAR,CAAaC,EAAb,IAAmB,GAAnB;AACAb,MAAAA,OAAO,CAACc,QAAD,CAAP;AACD;AACF,GAhDa,CAkDd;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,mBAAmB,EAAE,iBAFhB;AAGLC,MAAAA,eAAe,EAAE;AAHZ,KAFT;AAAA,cAQGlB,IAAI,CAACmB,GAAL,CAAS,CAACC,GAAD,EAAMjB,CAAN,KACRiB,GAAG,CAACD,GAAJ,CAAQ,CAACE,GAAD,EAAMC,CAAN,kBACN;AACE,MAAA,SAAS,EAAC,MADZ;AAGE,MAAA,OAAO,EAAE,MAAMV,kBAAkB,CAACT,CAAD,EAAImB,CAAJ,CAHnC;AAIE,MAAA,KAAK,EAAE;AACLJ,QAAAA,eAAe,EAAEK,WAAW,CAACvB,IAAI,CAACG,CAAD,CAAJ,CAAQmB,CAAR,CAAD,CADvB;AACqC;AAC1CE,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,KAAK,EAAE,MAHF;AAILC,QAAAA,MAAM,EAAE;AAJH;AAJT,OAEQ,GAAEvB,CAAE,IAAGmB,CAAE,EAFjB;AAAA;AAAA;AAAA;AAAA,YADF,CADD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAlFQvB,I;;KAAAA,I;AAoFT,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction Grid() {\r\n  const [grid, setGrid] = useState(() => {\r\n    const temp = [];\r\n    for (let i = 0; i < 10; i++) temp.push(Array.from(Array(10), () => \"e\"));\r\n    return temp;\r\n  });\r\n\r\n  // function placeShips() {\r\n  //   let gridCopy = deepListCopy(grid);\r\n  //   gridCopy[5][1] = \"s\";\r\n  //   gridCopy[6][1] = \"s\";\r\n  //   gridCopy[7][1] = \"s\";\r\n  //   gridCopy[8][1] = \"s\";\r\n  //   gridCopy[8][3] = \"s\";\r\n  //   gridCopy[8][4] = \"s\";\r\n  //   gridCopy[8][5] = \"s\";\r\n  //   gridCopy[6][3] = \"s\";\r\n  //   gridCopy[6][4] = \"s\";\r\n  //   gridCopy[6][5] = \"s\";\r\n  //   gridCopy[7][7] = \"s\";\r\n  //   gridCopy[6][7] = \"s\";\r\n  //   gridCopy[4][7] = \"s\";\r\n  //   gridCopy[4][6] = \"s\";\r\n  //   gridCopy[2][2] = \"s\";\r\n  //   gridCopy[2][1] = \"s\";\r\n  //   gridCopy[1][5] = \"s\";\r\n  //   gridCopy[1][8] = \"s\";\r\n  //   gridCopy[4][3] = \"s\";\r\n  //   gridCopy[9][9] = \"s\";\r\n  //   setGrid(gridCopy);\r\n  // }\r\n\r\n  useEffect(() => {\r\n    //placeShips();\r\n  }, []);\r\n  function deepListCopy(l) {\r\n    return JSON.parse(JSON.stringify(l));\r\n  }\r\n\r\n  function gridOnClickHandler(ri, ci) {\r\n    let gridCopy = deepListCopy(grid);\r\n    if (grid[ri][ci] === \"s\") {\r\n      gridCopy[ri][ci] = \"h\";\r\n      setGrid(gridCopy);\r\n    } else if (grid[ri][ci] === \"e\") {\r\n      gridCopy[ri][ci] = \"m\";\r\n      setGrid(gridCopy);\r\n    }\r\n  }\r\n\r\n  // function handleColor(spot) {\r\n  //   if (spot === \"h\") return \"pink\";\r\n  //   if (spot === \"m\") return \"gray\";\r\n  //   else return \"white\";\r\n  // }\r\n\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(10,20px)\",\r\n        backgroundColor: \"lightblue\",\r\n      }}\r\n    >\r\n      {grid.map((row, i) =>\r\n        row.map((col, j) => (\r\n          <div\r\n            className=\"spot\"\r\n            key={`${i}-${j}`}\r\n            onClick={() => gridOnClickHandler(i, j)}\r\n            style={{\r\n              backgroundColor: handleColor(grid[i][j]), //\r\n              height: \"18px\",\r\n              width: \"18px\",\r\n              border: \"solid 1px black\",\r\n            }}\r\n          ></div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n"]},"metadata":{},"sourceType":"module"}