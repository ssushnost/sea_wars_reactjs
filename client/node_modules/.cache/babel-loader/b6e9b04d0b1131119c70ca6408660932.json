{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction Grid() {\n  _s();\n\n  const [grid, setGrid] = useState(() => {\n    const temp = [];\n\n    for (let i = 0; i < 10; i++) temp.push(Array.from(Array(10), () => \"e\"));\n\n    return temp;\n  });\n\n  function placeShips() {\n    let gridCopy = deepListCopy(grid);\n    gridCopy[5][1] = \"s\";\n    gridCopy[6][1] = \"s\";\n    gridCopy[7][1] = \"s\";\n    gridCopy[8][1] = \"s\";\n    gridCopy[8][3] = \"s\";\n    gridCopy[8][4] = \"s\";\n    gridCopy[8][5] = \"s\";\n    gridCopy[6][3] = \"s\";\n    gridCopy[6][4] = \"s\";\n    gridCopy[6][5] = \"s\";\n    gridCopy[7][7] = \"s\";\n    gridCopy[6][7] = \"s\";\n    gridCopy[4][7] = \"s\";\n    gridCopy[4][6] = \"s\";\n    gridCopy[2][2] = \"s\";\n    gridCopy[2][1] = \"s\";\n    gridCopy[1][5] = \"s\";\n    gridCopy[1][8] = \"s\";\n    gridCopy[4][3] = \"s\";\n    gridCopy[9][9] = \"s\";\n    setGrid(gridCopy);\n  }\n\n  useEffect(() => {\n    placeShips();\n  }, []);\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function gridOnClickHandler(ri, ci) {\n    let gridCopy = deepListCopy(grid);\n\n    if (grid[ri][ci] === \"s\") {\n      gridCopy[ri][ci] = \"h\";\n      setGrid(gridCopy);\n    } else if (grid[ri][ci] === \"e\") {\n      gridCopy[ri][ci] = \"m\";\n      setGrid(gridCopy);\n    }\n  }\n\n  function handleColor(spot) {\n    if (spot === \"h\") return \"pink\";\n    if (spot === \"m\") return \"gray\";\n  }\n}\n\n_s(Grid, \"EjgV5AVkIGbUIiniOGU1MncGJHE=\");\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/components/Grid.js"],"names":["Grid","grid","setGrid","useState","temp","i","push","Array","from","placeShips","gridCopy","deepListCopy","useEffect","l","JSON","parse","stringify","gridOnClickHandler","ri","ci","handleColor","spot"],"mappings":"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","sourcesContent":["function Grid() {\r\n  const [grid, setGrid] = useState(() => {\r\n    const temp = [];\r\n    for (let i = 0; i < 10; i++) temp.push(Array.from(Array(10), () => \"e\"));\r\n    return temp;\r\n  });\r\n\r\n  function placeShips() {\r\n    let gridCopy = deepListCopy(grid);\r\n    gridCopy[5][1] = \"s\";\r\n    gridCopy[6][1] = \"s\";\r\n    gridCopy[7][1] = \"s\";\r\n    gridCopy[8][1] = \"s\";\r\n    gridCopy[8][3] = \"s\";\r\n    gridCopy[8][4] = \"s\";\r\n    gridCopy[8][5] = \"s\";\r\n    gridCopy[6][3] = \"s\";\r\n    gridCopy[6][4] = \"s\";\r\n    gridCopy[6][5] = \"s\";\r\n    gridCopy[7][7] = \"s\";\r\n    gridCopy[6][7] = \"s\";\r\n    gridCopy[4][7] = \"s\";\r\n    gridCopy[4][6] = \"s\";\r\n    gridCopy[2][2] = \"s\";\r\n    gridCopy[2][1] = \"s\";\r\n    gridCopy[1][5] = \"s\";\r\n    gridCopy[1][8] = \"s\";\r\n    gridCopy[4][3] = \"s\";\r\n    gridCopy[9][9] = \"s\";\r\n    setGrid(gridCopy);\r\n  }\r\n\r\n  useEffect(() => {\r\n    placeShips();\r\n  }, []);\r\n  function deepListCopy(l) {\r\n    return JSON.parse(JSON.stringify(l));\r\n  }\r\n\r\n  function gridOnClickHandler(ri, ci) {\r\n    let gridCopy = deepListCopy(grid);\r\n    if (grid[ri][ci] === \"s\") {\r\n      gridCopy[ri][ci] = \"h\";\r\n      setGrid(gridCopy);\r\n    } else if (grid[ri][ci] === \"e\") {\r\n      gridCopy[ri][ci] = \"m\";\r\n      setGrid(gridCopy);\r\n    }\r\n  }\r\n\r\n  function handleColor(spot) {\r\n    if (spot === \"h\") return \"pink\";\r\n    if (spot === \"m\") return \"gray\";\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}