{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Grid from \"./components/Grid.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridSize = 20;\nconst neighborsMoves = [[0, -1], [-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1]];\n\nfunction errorHandle(shipsObjRefCurrent) {\n  shipsObjRefCurrent.style.borderColor = \"red\";\n  setTimeout(() => shipsObjRefCurrent.style.borderColor = \"blue\", 500);\n  return false;\n}\n\nfunction multidimensionalIncludes(multidimensionalArray, searchArray) {\n  return multidimensionalArray.some(row => JSON.stringify(row) === JSON.stringify(searchArray));\n}\n\nfunction App() {\n  _s();\n\n  function handleMouseClick(e, shipName) {\n    if (e.button !== 2) return;\n    const shipObj = ships[shipName];\n    console.dir(shipObj);\n    const shipMap = shipObj.map;\n    const shipObjRefCurrent = shipObj.reference.current;\n    let shipsCopy = Object.assign({}, ships);\n\n    if (shipObj.isPlaced) {\n      var row = shipMap[0][0];\n      var col = shipMap[0][1];\n\n      switch (shipObj.orientation) {\n        case \"vertical\":\n          if (col > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n\n        case \"horizontal\":\n          if (row > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n    }\n\n    let allNeighborsExceptCurrentShip = [];\n\n    for (const ship in ships) {\n      if (ship !== shipName) {\n        ships[ship].neighbors.forEach(neighborPair => allNeighborsExceptCurrentShip.push(neighborPair));\n      }\n    }\n\n    let newMap = [];\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (multidimensionalIncludes(allNeighborsExceptCurrentShip, [row + i, col])) return errorHandle(shipObjRefCurrent);\n          newMap.push([row + i, col]);\n        }\n\n        shipsCopy[shipName].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (multidimensionalIncludes(allNeighborsExceptCurrentShip, [row, col + i])) return errorHandle(shipObjRefCurrent);\n          newMap.push([row, col + i]);\n        }\n\n        shipsCopy[shipName].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    shipsCopy[shipName].map = newMap;\n    let newNeighbors = [];\n    newMap.forEach(coords => {\n      neighborsMoves.forEach(move => {\n        const neighborsRow = coords[0] + move[0];\n        const neighborsCol = coords[1] + move[1];\n        const neighborsArray = [neighborsRow, neighborsCol];\n        if (neighborsRow >= 0 && neighborsRow <= 9 && neighborsCol >= 0 && neighborsCol <= 9) if (!multidimensionalIncludes(newNeighbors, neighborsArray) && !multidimensionalIncludes(newMap, neighborsArray)) newNeighbors.push(neighborsArray);\n      });\n    });\n    shipsCopy[shipName].neighbors = newNeighbors;\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return console.log(\"Not all ships placed\");\n    }\n\n    console.log(\"field is ready for game!\");\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_2: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 280\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_1: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_2: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 260\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_3: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 310\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_1: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_2: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 240\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_3: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 270\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_4: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 300\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    }\n  });\n  let shipDivs = [];\n\n  for (const ship in ships) {\n    shipDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships[ship].reference,\n      className: ship,\n      draggable: true,\n      onDragEnd: e => ships[ship].reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships[ship].reference.current.style.display = \"none\");\n        currentShipRef.current = ship;\n        const diffX = e.clientX - ships[ship].position.x;\n        const diffY = e.clientY - ships[ship].position.y;\n        grabXRef.current = parseInt(diffX / gridSize);\n        grabYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, ship),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships[ship].position.x,\n        top: ships[ship].position.y,\n        width: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, ship, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this));\n  }\n\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      width: \"500px\",\n      height: \"500px\"\n    },\n    children: [shipDivs, /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: readyCheck,\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AKqWwLbRF+EujNQCNECMLq1/N24=\");\n\n_c = App;\nexport default App; // .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/App.js"],"names":["React","Grid","gridSize","neighborsMoves","errorHandle","shipsObjRefCurrent","style","borderColor","setTimeout","multidimensionalIncludes","multidimensionalArray","searchArray","some","row","JSON","stringify","App","handleMouseClick","e","shipName","button","shipObj","ships","console","dir","shipMap","map","shipObjRefCurrent","reference","current","shipsCopy","Object","assign","isPlaced","col","orientation","size","warn","allNeighborsExceptCurrentShip","ship","neighbors","forEach","neighborPair","push","newMap","i","newNeighbors","coords","move","neighborsRow","neighborsCol","neighborsArray","setShips","deepListCopy","l","parse","readyCheck","log","useState","ship4","useRef","position","x","y","ship3_1","ship3_2","ship2_1","ship2_2","ship2_3","ship1_1","ship1_2","ship1_3","ship1_4","shipDivs","display","currentShipRef","diffX","clientX","diffY","clientY","grabXRef","parseInt","grabYRef","preventDefault","left","top","width","height","border","cursor","right"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"./components/Grid.js\";\n\nconst gridSize = 20;\n\nconst neighborsMoves = [\n  [0, -1],\n  [-1, -1],\n  [-1, 0],\n  [-1, 1],\n  [0, 1],\n  [1, 1],\n  [1, 0],\n  [1, -1],\n];\n\nfunction errorHandle(shipsObjRefCurrent) {\n  shipsObjRefCurrent.style.borderColor = \"red\";\n  setTimeout(() => (shipsObjRefCurrent.style.borderColor = \"blue\"), 500);\n  return false;\n}\n\nfunction multidimensionalIncludes(multidimensionalArray, searchArray) {\n  return multidimensionalArray.some(\n    (row) => JSON.stringify(row) === JSON.stringify(searchArray)\n  );\n}\n\nfunction App() {\n  \n\n  function handleMouseClick(e, shipName) {\n    if (e.button !== 2) return;\n\n    const shipObj = ships[shipName];\n    console.dir(shipObj);\n    const shipMap = shipObj.map;\n    const shipObjRefCurrent = shipObj.reference.current;\n\n    let shipsCopy = Object.assign({}, ships);\n\n    if (shipObj.isPlaced) {\n      var row = shipMap[0][0];\n      var col = shipMap[0][1];\n\n      switch (shipObj.orientation) {\n        case \"vertical\":\n          if (col > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n        case \"horizontal\":\n          if (row > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n    }\n\n    let allNeighborsExceptCurrentShip = [];\n    for (const ship in ships) {\n      if (ship !== shipName) {\n        ships[ship].neighbors.forEach((neighborPair) =>\n          allNeighborsExceptCurrentShip.push(neighborPair)\n        );\n      }\n    }\n\n    let newMap = [];\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (\n            multidimensionalIncludes(allNeighborsExceptCurrentShip, [\n              row + i,\n              col,\n            ])\n          )\n            return errorHandle(shipObjRefCurrent);\n          newMap.push([row + i, col]);\n        }\n\n        shipsCopy[shipName].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (\n            multidimensionalIncludes(allNeighborsExceptCurrentShip, [\n              row,\n              col + i,\n            ])\n          )\n            return errorHandle(shipObjRefCurrent);\n          newMap.push([row, col + i]);\n        }\n\n        shipsCopy[shipName].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    shipsCopy[shipName].map = newMap;\n\n    let newNeighbors = [];\n\n    newMap.forEach((coords) => {\n      neighborsMoves.forEach((move) => {\n        const neighborsRow = coords[0] + move[0];\n        const neighborsCol = coords[1] + move[1];\n        const neighborsArray = [neighborsRow, neighborsCol];\n        if (\n          neighborsRow >= 0 &&\n          neighborsRow <= 9 &&\n          neighborsCol >= 0 &&\n          neighborsCol <= 9\n        )\n          if (\n            !multidimensionalIncludes(newNeighbors, neighborsArray) &&\n            !multidimensionalIncludes(newMap, neighborsArray)\n          )\n            newNeighbors.push(neighborsArray);\n      });\n    });\n    shipsCopy[shipName].neighbors = newNeighbors;\n\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return console.log(\"Not all ships placed\");\n    }\n    console.log(\"field is ready for game!\");\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: { x: 10, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: { x: 100, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship3_2: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: { x: 100, y: 280 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship2_1: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: { x: 170, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship2_2: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: { x: 170, y: 260 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship2_3: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: { x: 170, y: 310 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_1: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_2: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 240 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_3: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 270 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_4: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 300 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n  });\n\n  let shipDivs = [];\n\n  for (const ship in ships) {\n    shipDivs.push(\n      <div\n        ref={ships[ship].reference}\n        key={ship}\n        className={ship}\n        draggable\n        onDragEnd={(e) =>\n          (ships[ship].reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships[ship].reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = ship;\n          const diffX = e.clientX - ships[ship].position.x;\n          const diffY = e.clientY - ships[ship].position.y;\n          grabXRef.current = parseInt(diffX / gridSize);\n          grabYRef.current = parseInt(diffY / gridSize);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, ship)}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships[ship].position.x,\n          top: ships[ship].position.y,\n          width: (() => {\n            switch (ships[ship].orientation) {\n              case \"horizontal\":\n                return `${gridSize * ships[ship].size - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships[ship].orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${gridSize * ships[ship].size - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n    );\n  }\n\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        width: \"500px\",\n        height: \"500px\",\n      }}\n    >\n      {shipDivs}\n      <button style={{ position: \"absolute\", right: 0 }} onClick={readyCheck}>\n        Ready\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n"]},"metadata":{},"sourceType":"module"}