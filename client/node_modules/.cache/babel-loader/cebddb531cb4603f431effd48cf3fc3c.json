{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\components\\\\Ships.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst neighborsMoves = [[0, -1], [-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1]];\nexport default function Ships(gridSize) {\n  _s();\n\n  function errorHandle(shipsObjRefCurrent) {\n    shipsObjRefCurrent.style.borderColor = \"red\";\n    setTimeout(() => shipsObjRefCurrent.style.borderColor = \"blue\", 500);\n    return false;\n  }\n\n  function multidimensionalIncludes(multidimensionalArray, searchArray) {\n    return multidimensionalArray.some(row => JSON.stringify(row) === JSON.stringify(searchArray));\n  }\n\n  function handleMouseClick(e, shipName) {\n    if (e.button !== 2) return;\n    const shipObj = ships[shipName];\n    console.dir(shipObj);\n    const shipMap = shipObj.map;\n    const shipObjRefCurrent = shipObj.reference.current;\n    let shipsCopy = Object.assign({}, ships);\n\n    if (shipObj.isPlaced) {\n      var row = shipMap[0][0];\n      var col = shipMap[0][1];\n\n      switch (shipObj.orientation) {\n        case \"vertical\":\n          if (col > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n\n        case \"horizontal\":\n          if (row > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n    }\n\n    let allNeighborsExceptCurrentShip = [];\n\n    for (const ship in ships) {\n      if (ship !== shipName) {\n        ships[ship].neighbors.forEach(neighborPair => allNeighborsExceptCurrentShip.push(neighborPair));\n      }\n    }\n\n    let newMap = [];\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (multidimensionalIncludes(allNeighborsExceptCurrentShip, [row + i, col])) return errorHandle(shipObjRefCurrent);\n          newMap.push([row + i, col]);\n        }\n\n        shipsCopy[shipName].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (multidimensionalIncludes(allNeighborsExceptCurrentShip, [row, col + i])) return errorHandle(shipObjRefCurrent);\n          newMap.push([row, col + i]);\n        }\n\n        shipsCopy[shipName].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    shipsCopy[shipName].map = newMap;\n    let newNeighbors = [];\n    newMap.forEach(coords => {\n      neighborsMoves.forEach(move => {\n        const neighborsRow = coords[0] + move[0];\n        const neighborsCol = coords[1] + move[1];\n        const neighborsArray = [neighborsRow, neighborsCol];\n        if (neighborsRow >= 0 && neighborsRow <= 9 && neighborsCol >= 0 && neighborsCol <= 9) if (!multidimensionalIncludes(newNeighbors, neighborsArray) && !multidimensionalIncludes(newMap, neighborsArray)) newNeighbors.push(neighborsArray);\n      });\n    });\n    shipsCopy[shipName].neighbors = newNeighbors;\n    setShips(shipsCopy);\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return console.log(\"Not all ships placed\");\n    }\n\n    console.log(\"field is ready for game!\");\n  }\n\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n  let shipDivs = [];\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_2: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 280\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_1: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_2: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 260\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_3: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 310\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_1: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_2: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 240\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_3: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 270\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_4: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 300\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    }\n  });\n\n  for (const ship in ships) {\n    shipDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships[ship].reference,\n      className: ship,\n      draggable: true,\n      onDragEnd: e => ships[ship].reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships[ship].reference.current.style.display = \"none\");\n        currentShipRef.current = ship;\n        const diffX = e.clientX - ships[ship].position.x;\n        const diffY = e.clientY - ships[ship].position.y;\n        grabXRef.current = parseInt(diffX / gridSize);\n        grabYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, ship),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships[ship].position.x,\n        top: ships[ship].position.y,\n        width: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, ship, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [shipDivs, /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: readyCheck,\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Ships, \"VKJUkwfKfmQxk+aJvSMYLv78XVg=\");\n\n_c = Ships;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ships\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/components/Ships.js"],"names":["React","neighborsMoves","Ships","gridSize","errorHandle","shipsObjRefCurrent","style","borderColor","setTimeout","multidimensionalIncludes","multidimensionalArray","searchArray","some","row","JSON","stringify","handleMouseClick","e","shipName","button","shipObj","ships","console","dir","shipMap","map","shipObjRefCurrent","reference","current","shipsCopy","Object","assign","isPlaced","col","orientation","size","warn","allNeighborsExceptCurrentShip","ship","neighbors","forEach","neighborPair","push","newMap","i","newNeighbors","coords","move","neighborsRow","neighborsCol","neighborsArray","setShips","readyCheck","log","currentShipRef","useRef","grabXRef","grabYRef","shipDivs","useState","ship4","position","x","y","ship3_1","ship3_2","ship2_1","ship2_2","ship2_3","ship1_1","ship1_2","ship1_3","ship1_4","display","diffX","clientX","diffY","clientY","parseInt","preventDefault","left","top","width","height","border","cursor","right"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CACrB,CAAC,CAAD,EAAI,CAAC,CAAL,CADqB,EAErB,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAFqB,EAGrB,CAAC,CAAC,CAAF,EAAK,CAAL,CAHqB,EAIrB,CAAC,CAAC,CAAF,EAAK,CAAL,CAJqB,EAKrB,CAAC,CAAD,EAAI,CAAJ,CALqB,EAMrB,CAAC,CAAD,EAAI,CAAJ,CANqB,EAOrB,CAAC,CAAD,EAAI,CAAJ,CAPqB,EAQrB,CAAC,CAAD,EAAI,CAAC,CAAL,CARqB,CAAvB;AAUA,eAAe,SAASC,KAAT,CAAeC,QAAf,EAAyB;AAAA;;AACtC,WAASC,WAAT,CAAqBC,kBAArB,EAAyC;AACvCA,IAAAA,kBAAkB,CAACC,KAAnB,CAAyBC,WAAzB,GAAuC,KAAvC;AACAC,IAAAA,UAAU,CAAC,MAAOH,kBAAkB,CAACC,KAAnB,CAAyBC,WAAzB,GAAuC,MAA/C,EAAwD,GAAxD,CAAV;AACA,WAAO,KAAP;AACD;;AACD,WAASE,wBAAT,CAAkCC,qBAAlC,EAAyDC,WAAzD,EAAsE;AACpE,WAAOD,qBAAqB,CAACE,IAAtB,CACJC,GAAD,IAASC,IAAI,CAACC,SAAL,CAAeF,GAAf,MAAwBC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAD5B,CAAP;AAGD;;AAED,WAASK,gBAAT,CAA0BC,CAA1B,EAA6BC,QAA7B,EAAuC;AACrC,QAAID,CAAC,CAACE,MAAF,KAAa,CAAjB,EAAoB;AAEpB,UAAMC,OAAO,GAAGC,KAAK,CAACH,QAAD,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,UAAMI,OAAO,GAAGJ,OAAO,CAACK,GAAxB;AACA,UAAMC,iBAAiB,GAAGN,OAAO,CAACO,SAAR,CAAkBC,OAA5C;AAEA,QAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,CAAhB;;AAEA,QAAID,OAAO,CAACY,QAAZ,EAAsB;AACpB,UAAInB,GAAG,GAAGW,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAV;AACA,UAAIS,GAAG,GAAGT,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAV;;AAEA,cAAQJ,OAAO,CAACc,WAAhB;AACE,aAAK,UAAL;AACE,cAAID,GAAG,GAAG,KAAKb,OAAO,CAACe,IAAvB,EAA6B,OAAO/B,WAAW,CAACsB,iBAAD,CAAlB;AAC7B;;AACF,aAAK,YAAL;AACE,cAAIb,GAAG,GAAG,KAAKO,OAAO,CAACe,IAAvB,EAA6B,OAAO/B,WAAW,CAACsB,iBAAD,CAAlB;AAC7B;;AACF;AACEJ,UAAAA,OAAO,CAACc,IAAR,CAAa,6CAAb;AARJ;AAUD;;AAED,QAAIC,6BAA6B,GAAG,EAApC;;AACA,SAAK,MAAMC,IAAX,IAAmBjB,KAAnB,EAA0B;AACxB,UAAIiB,IAAI,KAAKpB,QAAb,EAAuB;AACrBG,QAAAA,KAAK,CAACiB,IAAD,CAAL,CAAYC,SAAZ,CAAsBC,OAAtB,CAA+BC,YAAD,IAC5BJ,6BAA6B,CAACK,IAA9B,CAAmCD,YAAnC,CADF;AAGD;AACF;;AAED,QAAIE,MAAM,GAAG,EAAb;;AAEA,YAAQvB,OAAO,CAACc,WAAhB;AACE,WAAK,YAAL;AACE,aAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxB,OAAO,CAACe,IAA5B,EAAkCS,CAAC,EAAnC,EAAuC;AACrC,cACEnC,wBAAwB,CAAC4B,6BAAD,EAAgC,CACtDxB,GAAG,GAAG+B,CADgD,EAEtDX,GAFsD,CAAhC,CAD1B,EAME,OAAO7B,WAAW,CAACsB,iBAAD,CAAlB;AACFiB,UAAAA,MAAM,CAACD,IAAP,CAAY,CAAC7B,GAAG,GAAG+B,CAAP,EAAUX,GAAV,CAAZ;AACD;;AAEDJ,QAAAA,SAAS,CAACX,QAAD,CAAT,CAAoBgB,WAApB,GAAkC,UAAlC;AACA;;AAEF,WAAK,UAAL;AACE,aAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxB,OAAO,CAACe,IAA5B,EAAkCS,CAAC,EAAnC,EAAuC;AACrC,cACEnC,wBAAwB,CAAC4B,6BAAD,EAAgC,CACtDxB,GADsD,EAEtDoB,GAAG,GAAGW,CAFgD,CAAhC,CAD1B,EAME,OAAOxC,WAAW,CAACsB,iBAAD,CAAlB;AACFiB,UAAAA,MAAM,CAACD,IAAP,CAAY,CAAC7B,GAAD,EAAMoB,GAAG,GAAGW,CAAZ,CAAZ;AACD;;AAEDf,QAAAA,SAAS,CAACX,QAAD,CAAT,CAAoBgB,WAApB,GAAkC,YAAlC;AACA;;AAEF;AACEZ,QAAAA,OAAO,CAACc,IAAR,CAAa,+BAAb;AAhCJ;;AAmCAP,IAAAA,SAAS,CAACX,QAAD,CAAT,CAAoBO,GAApB,GAA0BkB,MAA1B;AAEA,QAAIE,YAAY,GAAG,EAAnB;AAEAF,IAAAA,MAAM,CAACH,OAAP,CAAgBM,MAAD,IAAY;AACzB7C,MAAAA,cAAc,CAACuC,OAAf,CAAwBO,IAAD,IAAU;AAC/B,cAAMC,YAAY,GAAGF,MAAM,CAAC,CAAD,CAAN,GAAYC,IAAI,CAAC,CAAD,CAArC;AACA,cAAME,YAAY,GAAGH,MAAM,CAAC,CAAD,CAAN,GAAYC,IAAI,CAAC,CAAD,CAArC;AACA,cAAMG,cAAc,GAAG,CAACF,YAAD,EAAeC,YAAf,CAAvB;AACA,YACED,YAAY,IAAI,CAAhB,IACAA,YAAY,IAAI,CADhB,IAEAC,YAAY,IAAI,CAFhB,IAGAA,YAAY,IAAI,CAJlB,EAME,IACE,CAACxC,wBAAwB,CAACoC,YAAD,EAAeK,cAAf,CAAzB,IACA,CAACzC,wBAAwB,CAACkC,MAAD,EAASO,cAAT,CAF3B,EAIEL,YAAY,CAACH,IAAb,CAAkBQ,cAAlB;AACL,OAfD;AAgBD,KAjBD;AAkBArB,IAAAA,SAAS,CAACX,QAAD,CAAT,CAAoBqB,SAApB,GAAgCM,YAAhC;AAEAM,IAAAA,QAAQ,CAACtB,SAAD,CAAR;AACD;;AAED,WAASuB,UAAT,GAAsB;AACpB,SAAK,MAAMd,IAAX,IAAmBjB,KAAnB,EAA0B;AACxB,UAAI,CAACA,KAAK,CAACiB,IAAD,CAAL,CAAYN,QAAjB,EAA2B,OAAOV,OAAO,CAAC+B,GAAR,CAAY,sBAAZ,CAAP;AAC5B;;AACD/B,IAAAA,OAAO,CAAC+B,GAAR,CAAY,0BAAZ;AACD;;AAED,QAAMC,cAAc,GAAGtD,KAAK,CAACuD,MAAN,EAAvB;AACA,QAAMC,QAAQ,GAAGxD,KAAK,CAACuD,MAAN,EAAjB;AACA,QAAME,QAAQ,GAAGzD,KAAK,CAACuD,MAAN,EAAjB;AAEA,MAAIG,QAAQ,GAAG,EAAf;AAEA,QAAM,CAACrC,KAAD,EAAQ8B,QAAR,IAAoBnD,KAAK,CAAC2D,QAAN,CAAe;AACvCC,IAAAA,KAAK,EAAE;AACL1B,MAAAA,WAAW,EAAE,YADR;AAELC,MAAAA,IAAI,EAAE,CAFD;AAGLR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHN;AAILM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,EAAL;AAASC,QAAAA,CAAC,EAAE;AAAZ,OAJL;AAKLxB,MAAAA,SAAS,EAAE,EALN;AAMLd,MAAAA,GAAG,EAAE,EANA;AAOLO,MAAAA,QAAQ,EAAE;AAPL,KADgC;AAUvCgC,IAAAA,OAAO,EAAE;AACP9B,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHJ;AAIPM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAJH;AAKPxB,MAAAA,SAAS,EAAE,EALJ;AAMPd,MAAAA,GAAG,EAAE,EANE;AAOPO,MAAAA,QAAQ,EAAE;AAPH,KAV8B;AAmBvCiC,IAAAA,OAAO,EAAE;AACP/B,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHJ;AAIPM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAJH;AAKPxB,MAAAA,SAAS,EAAE,EALJ;AAMPd,MAAAA,GAAG,EAAE,EANE;AAOPO,MAAAA,QAAQ,EAAE;AAPH,KAnB8B;AA4BvCkC,IAAAA,OAAO,EAAE;AACPhC,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHJ;AAIPM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAJH;AAKPxB,MAAAA,SAAS,EAAE,EALJ;AAMPd,MAAAA,GAAG,EAAE,EANE;AAOPO,MAAAA,QAAQ,EAAE;AAPH,KA5B8B;AAqCvCmC,IAAAA,OAAO,EAAE;AACPjC,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHJ;AAIPM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAJH;AAKPxB,MAAAA,SAAS,EAAE,EALJ;AAMPd,MAAAA,GAAG,EAAE,EANE;AAOPO,MAAAA,QAAQ,EAAE;AAPH,KArC8B;AA8CvCoC,IAAAA,OAAO,EAAE;AACPlC,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHJ;AAIPM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAJH;AAKPxB,MAAAA,SAAS,EAAE,EALJ;AAMPd,MAAAA,GAAG,EAAE,EANE;AAOPO,MAAAA,QAAQ,EAAE;AAPH,KA9C8B;AAuDvCqC,IAAAA,OAAO,EAAE;AACPnC,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHJ;AAIPM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAJH;AAKPxB,MAAAA,SAAS,EAAE,EALJ;AAMPd,MAAAA,GAAG,EAAE,EANE;AAOPO,MAAAA,QAAQ,EAAE;AAPH,KAvD8B;AAgEvCsC,IAAAA,OAAO,EAAE;AACPpC,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHJ;AAIPM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAJH;AAKPxB,MAAAA,SAAS,EAAE,EALJ;AAMPd,MAAAA,GAAG,EAAE,EANE;AAOPO,MAAAA,QAAQ,EAAE;AAPH,KAhE8B;AAyEvCuC,IAAAA,OAAO,EAAE;AACPrC,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHJ;AAIPM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAJH;AAKPxB,MAAAA,SAAS,EAAE,EALJ;AAMPd,MAAAA,GAAG,EAAE,EANE;AAOPO,MAAAA,QAAQ,EAAE;AAPH,KAzE8B;AAkFvCwC,IAAAA,OAAO,EAAE;AACPtC,MAAAA,WAAW,EAAE,YADN;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPR,MAAAA,SAAS,EAAE3B,KAAK,CAACuD,MAAN,EAHJ;AAIPM,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAJH;AAKPxB,MAAAA,SAAS,EAAE,EALJ;AAMPd,MAAAA,GAAG,EAAE,EANE;AAOPO,MAAAA,QAAQ,EAAE;AAPH;AAlF8B,GAAf,CAA1B;;AA6FA,OAAK,MAAMM,IAAX,IAAmBjB,KAAnB,EAA0B;AACxBqC,IAAAA,QAAQ,CAAChB,IAAT,eACE;AACE,MAAA,GAAG,EAAErB,KAAK,CAACiB,IAAD,CAAL,CAAYX,SADnB;AAGE,MAAA,SAAS,EAAEW,IAHb;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,EAAGrB,CAAD,IACRI,KAAK,CAACiB,IAAD,CAAL,CAAYX,SAAZ,CAAsBC,OAAtB,CAA8BtB,KAA9B,CAAoCmE,OAApC,GAA8C,QANnD;AAQE,MAAA,WAAW,EAAGxD,CAAD,IAAO;AAClBT,QAAAA,UAAU,CACR,MAAOa,KAAK,CAACiB,IAAD,CAAL,CAAYX,SAAZ,CAAsBC,OAAtB,CAA8BtB,KAA9B,CAAoCmE,OAApC,GAA8C,MAD7C,CAAV;AAGAnB,QAAAA,cAAc,CAAC1B,OAAf,GAAyBU,IAAzB;AACA,cAAMoC,KAAK,GAAGzD,CAAC,CAAC0D,OAAF,GAAYtD,KAAK,CAACiB,IAAD,CAAL,CAAYuB,QAAZ,CAAqBC,CAA/C;AACA,cAAMc,KAAK,GAAG3D,CAAC,CAAC4D,OAAF,GAAYxD,KAAK,CAACiB,IAAD,CAAL,CAAYuB,QAAZ,CAAqBE,CAA/C;AACAP,QAAAA,QAAQ,CAAC5B,OAAT,GAAmBkD,QAAQ,CAACJ,KAAK,GAAGvE,QAAT,CAA3B;AACAsD,QAAAA,QAAQ,CAAC7B,OAAT,GAAmBkD,QAAQ,CAACF,KAAK,GAAGzE,QAAT,CAA3B;AACD,OAjBH;AAkBE,MAAA,SAAS,EAAGc,CAAD,IAAOT,UAAU,CAACQ,gBAAD,EAAmB,CAAnB,EAAsBC,CAAtB,EAAyBqB,IAAzB,CAlB9B;AAmBE,MAAA,aAAa,EAAGrB,CAAD,IAAOA,CAAC,CAAC8D,cAAF,EAnBxB;AAoBE,MAAA,KAAK,EAAE;AACLlB,QAAAA,QAAQ,EAAE,UADL;AAELmB,QAAAA,IAAI,EAAE3D,KAAK,CAACiB,IAAD,CAAL,CAAYuB,QAAZ,CAAqBC,CAFtB;AAGLmB,QAAAA,GAAG,EAAE5D,KAAK,CAACiB,IAAD,CAAL,CAAYuB,QAAZ,CAAqBE,CAHrB;AAILmB,QAAAA,KAAK,EAAE,CAAC,MAAM;AACZ,kBAAQ7D,KAAK,CAACiB,IAAD,CAAL,CAAYJ,WAApB;AACE,iBAAK,YAAL;AACE,qBAAQ,GAAE/B,QAAQ,GAAGkB,KAAK,CAACiB,IAAD,CAAL,CAAYH,IAAvB,GAA8B,CAAE,IAA1C;;AACF,iBAAK,UAAL;AACE,qBAAO,MAAP;;AACF;AACE,qBAAO,OAAP;AANJ;AAQD,SATM,GAJF;AAcLgD,QAAAA,MAAM,EAAE,CAAC,MAAM;AACb,kBAAQ9D,KAAK,CAACiB,IAAD,CAAL,CAAYJ,WAApB;AACE,iBAAK,YAAL;AACE,qBAAO,MAAP;;AACF,iBAAK,UAAL;AACE,qBAAQ,GAAE/B,QAAQ,GAAGkB,KAAK,CAACiB,IAAD,CAAL,CAAYH,IAAvB,GAA8B,CAAE,IAA1C;;AACF;AACE,qBAAO,OAAP;AANJ;AAQD,SATO,GAdH;AAwBLiD,QAAAA,MAAM,EAAE,gBAxBH;AAyBLC,QAAAA,MAAM,EAAE;AAzBH;AApBT,OAEO/C,IAFP;AAAA;AAAA;AAAA;AAAA,YADF;AAkDD;;AAED,sBACE;AAAA,eACGoB,QADH,eAEE;AAAQ,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE,UAAZ;AAAwByB,QAAAA,KAAK,EAAE;AAA/B,OAAf;AAAmD,MAAA,OAAO,EAAElC,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtRuBlD,K;;KAAAA,K","sourcesContent":["import React from \"react\";\r\n\r\nconst neighborsMoves = [\r\n  [0, -1],\r\n  [-1, -1],\r\n  [-1, 0],\r\n  [-1, 1],\r\n  [0, 1],\r\n  [1, 1],\r\n  [1, 0],\r\n  [1, -1],\r\n];\r\nexport default function Ships(gridSize) {\r\n  function errorHandle(shipsObjRefCurrent) {\r\n    shipsObjRefCurrent.style.borderColor = \"red\";\r\n    setTimeout(() => (shipsObjRefCurrent.style.borderColor = \"blue\"), 500);\r\n    return false;\r\n  }\r\n  function multidimensionalIncludes(multidimensionalArray, searchArray) {\r\n    return multidimensionalArray.some(\r\n      (row) => JSON.stringify(row) === JSON.stringify(searchArray)\r\n    );\r\n  }\r\n\r\n  function handleMouseClick(e, shipName) {\r\n    if (e.button !== 2) return;\r\n\r\n    const shipObj = ships[shipName];\r\n    console.dir(shipObj);\r\n    const shipMap = shipObj.map;\r\n    const shipObjRefCurrent = shipObj.reference.current;\r\n\r\n    let shipsCopy = Object.assign({}, ships);\r\n\r\n    if (shipObj.isPlaced) {\r\n      var row = shipMap[0][0];\r\n      var col = shipMap[0][1];\r\n\r\n      switch (shipObj.orientation) {\r\n        case \"vertical\":\r\n          if (col > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\r\n          break;\r\n        case \"horizontal\":\r\n          if (row > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\r\n          break;\r\n        default:\r\n          console.warn(\"wrong ship orientation in start rmb handler\");\r\n      }\r\n    }\r\n\r\n    let allNeighborsExceptCurrentShip = [];\r\n    for (const ship in ships) {\r\n      if (ship !== shipName) {\r\n        ships[ship].neighbors.forEach((neighborPair) =>\r\n          allNeighborsExceptCurrentShip.push(neighborPair)\r\n        );\r\n      }\r\n    }\r\n\r\n    let newMap = [];\r\n\r\n    switch (shipObj.orientation) {\r\n      case \"horizontal\":\r\n        for (let i = 0; i < shipObj.size; i++) {\r\n          if (\r\n            multidimensionalIncludes(allNeighborsExceptCurrentShip, [\r\n              row + i,\r\n              col,\r\n            ])\r\n          )\r\n            return errorHandle(shipObjRefCurrent);\r\n          newMap.push([row + i, col]);\r\n        }\r\n\r\n        shipsCopy[shipName].orientation = \"vertical\";\r\n        break;\r\n\r\n      case \"vertical\":\r\n        for (let i = 0; i < shipObj.size; i++) {\r\n          if (\r\n            multidimensionalIncludes(allNeighborsExceptCurrentShip, [\r\n              row,\r\n              col + i,\r\n            ])\r\n          )\r\n            return errorHandle(shipObjRefCurrent);\r\n          newMap.push([row, col + i]);\r\n        }\r\n\r\n        shipsCopy[shipName].orientation = \"horizontal\";\r\n        break;\r\n\r\n      default:\r\n        console.warn(\"wrong ship orientation in rmb\");\r\n    }\r\n\r\n    shipsCopy[shipName].map = newMap;\r\n\r\n    let newNeighbors = [];\r\n\r\n    newMap.forEach((coords) => {\r\n      neighborsMoves.forEach((move) => {\r\n        const neighborsRow = coords[0] + move[0];\r\n        const neighborsCol = coords[1] + move[1];\r\n        const neighborsArray = [neighborsRow, neighborsCol];\r\n        if (\r\n          neighborsRow >= 0 &&\r\n          neighborsRow <= 9 &&\r\n          neighborsCol >= 0 &&\r\n          neighborsCol <= 9\r\n        )\r\n          if (\r\n            !multidimensionalIncludes(newNeighbors, neighborsArray) &&\r\n            !multidimensionalIncludes(newMap, neighborsArray)\r\n          )\r\n            newNeighbors.push(neighborsArray);\r\n      });\r\n    });\r\n    shipsCopy[shipName].neighbors = newNeighbors;\r\n\r\n    setShips(shipsCopy);\r\n  }\r\n\r\n  function readyCheck() {\r\n    for (const ship in ships) {\r\n      if (!ships[ship].isPlaced) return console.log(\"Not all ships placed\");\r\n    }\r\n    console.log(\"field is ready for game!\");\r\n  }\r\n\r\n  const currentShipRef = React.useRef();\r\n  const grabXRef = React.useRef();\r\n  const grabYRef = React.useRef();\r\n\r\n  let shipDivs = [];\r\n\r\n  const [ships, setShips] = React.useState({\r\n    ship4: {\r\n      orientation: \"horizontal\",\r\n      size: 4,\r\n      reference: React.useRef(),\r\n      position: { x: 10, y: 210 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship3_1: {\r\n      orientation: \"horizontal\",\r\n      size: 3,\r\n      reference: React.useRef(),\r\n      position: { x: 100, y: 210 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship3_2: {\r\n      orientation: \"horizontal\",\r\n      size: 3,\r\n      reference: React.useRef(),\r\n      position: { x: 100, y: 280 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship2_1: {\r\n      orientation: \"horizontal\",\r\n      size: 2,\r\n      reference: React.useRef(),\r\n      position: { x: 170, y: 210 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship2_2: {\r\n      orientation: \"horizontal\",\r\n      size: 2,\r\n      reference: React.useRef(),\r\n      position: { x: 170, y: 260 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship2_3: {\r\n      orientation: \"horizontal\",\r\n      size: 2,\r\n      reference: React.useRef(),\r\n      position: { x: 170, y: 310 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship1_1: {\r\n      orientation: \"horizontal\",\r\n      size: 1,\r\n      reference: React.useRef(),\r\n      position: { x: 220, y: 210 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship1_2: {\r\n      orientation: \"horizontal\",\r\n      size: 1,\r\n      reference: React.useRef(),\r\n      position: { x: 220, y: 240 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship1_3: {\r\n      orientation: \"horizontal\",\r\n      size: 1,\r\n      reference: React.useRef(),\r\n      position: { x: 220, y: 270 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship1_4: {\r\n      orientation: \"horizontal\",\r\n      size: 1,\r\n      reference: React.useRef(),\r\n      position: { x: 220, y: 300 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n  });\r\n\r\n  for (const ship in ships) {\r\n    shipDivs.push(\r\n      <div\r\n        ref={ships[ship].reference}\r\n        key={ship}\r\n        className={ship}\r\n        draggable\r\n        onDragEnd={(e) =>\r\n          (ships[ship].reference.current.style.display = \"inline\")\r\n        }\r\n        onDragStart={(e) => {\r\n          setTimeout(\r\n            () => (ships[ship].reference.current.style.display = \"none\")\r\n          );\r\n          currentShipRef.current = ship;\r\n          const diffX = e.clientX - ships[ship].position.x;\r\n          const diffY = e.clientY - ships[ship].position.y;\r\n          grabXRef.current = parseInt(diffX / gridSize);\r\n          grabYRef.current = parseInt(diffY / gridSize);\r\n        }}\r\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, ship)}\r\n        onContextMenu={(e) => e.preventDefault()}\r\n        style={{\r\n          position: \"absolute\",\r\n          left: ships[ship].position.x,\r\n          top: ships[ship].position.y,\r\n          width: (() => {\r\n            switch (ships[ship].orientation) {\r\n              case \"horizontal\":\r\n                return `${gridSize * ships[ship].size - 4}px`;\r\n              case \"vertical\":\r\n                return \"16px\";\r\n              default:\r\n                return \"100px\";\r\n            }\r\n          })(),\r\n          height: (() => {\r\n            switch (ships[ship].orientation) {\r\n              case \"horizontal\":\r\n                return \"16px\";\r\n              case \"vertical\":\r\n                return `${gridSize * ships[ship].size - 4}px`;\r\n              default:\r\n                return \"100px\";\r\n            }\r\n          })(),\r\n          border: \"solid 2px blue\",\r\n          cursor: \"grab\",\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {shipDivs}\r\n      <button style={{ position: \"absolute\", right: 0 }} onClick={readyCheck}>\r\n        Ready\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}