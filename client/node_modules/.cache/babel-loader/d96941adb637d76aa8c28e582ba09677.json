{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet grid = [];\n\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nlet gridSize = 20;\n\nfunction App() {\n  _s();\n\n  function handleDrop(e, dropRow, dropCol) {\n    function errorHandle() {\n      shipObj.reference.current.style.borderColor = \"red\";\n      setTimeout(() => shipsObjRefCurrent.style.borderColor = \"blue\", 500);\n      isShipPlacedOutsideGrid = true;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    let isShipPlacedOutsideGrid = false;\n    const grabX = grabStartCoordsRefs.x.current;\n    const grabY = grabStartCoordsRefs.y.current;\n    const placeCol = Math.floor((dropCol * gridSize - grabX * gridSize + 8) / gridSize);\n    const placeRow = Math.floor((dropRow * gridSize - grabY * gridSize + 8) / gridSize);\n    const currentShipName = currentShipRef.current;\n    const shipObj = ships[currentShipName];\n    const shipsObjRefCurrent = shipObj.reference.current;\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        if (placeCol > 10 - shipObj.size || placeCol < 0) {\n          errorHandle();\n        }\n\n        break;\n\n      case \"vertical\":\n        if (placeRow > 10 - shipObj.size || placeRow < 0) {\n          errorHandle();\n        }\n\n        break;\n\n      default:\n        console.warn(\"wrong orientation in \");\n    }\n\n    if (!isShipPlacedOutsideGrid) {\n      let shipsCopy = Object.assign({}, ships);\n      shipsCopy[currentShipName].position.x = dropCol * gridSize - grabX * gridSize + 8;\n      shipsCopy[currentShipName].position.y = dropRow * gridSize - grabН * gridSize + 8;\n      let newMap = []; // let startCol = parseInt(\n      //   shipsCopy[currentShipName].position.x / shipObj.size,\n      //   10\n      // );\n      // let startRow = parseInt(\n      //   shipsCopy[currentShipName].position.y / shipObj.size,\n      //   10\n      // );\n\n      for (let i = 0; i < shipObj.size; i++) {\n        switch (shipObj.orientation) {\n          case \"vertical\":\n            newMap.push([dropRow + i, dropCol]);\n            break;\n\n          case \"horizontal\":\n            newMap.push([dropRow, dropCol + i]);\n            break;\n\n          default:\n            console.warn(\"ship have wrong orientation\");\n        }\n      }\n\n      shipsCopy[currentShipName].map = newMap;\n      shipsCopy[currentShipName].isPlaced = true;\n      setShips(shipsCopy);\n    }\n\n    return false;\n  }\n\n  function handleMouseClick(e, ship) {\n    if (e.button !== 2) return;\n    let shipsCopy = Object.assign({}, ships);\n\n    if (ships[ship].isPlaced) {\n      var row = ships[ship].map[0][0];\n      var col = ships[ship].map[0][1];\n\n      switch (ships[ship].orientation) {\n        case \"vertical\":\n          if (col > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(() => ships[ship].reference.current.style.borderColor = \"blue\", 500);\n            return;\n          }\n\n          break;\n\n        case \"horizontal\":\n          if (row > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(() => ships[ship].reference.current.style.borderColor = \"blue\", 500);\n            return;\n          }\n\n          break;\n\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n\n      shipsCopy[ship].map = [];\n    }\n\n    switch (shipsCopy[ship].orientation) {\n      case \"horizontal\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row + i, col]);\n          }\n        }\n\n        shipsCopy[ship].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row, col + i]);\n          }\n        }\n\n        shipsCopy[ship].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    console.dir(ships);\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return false;\n      console.log(\"field is ready for game!\");\n    }\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 210\n      },\n      map: [],\n      isPlaced: false\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 240\n      },\n      map: [],\n      isPlaced: false\n    }\n  });\n  const currentShipRef = React.useRef();\n  const grabStartCoordsRefs = {\n    x: React.useRef(),\n    y: React.useRef()\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: \"blanchedalmond\",\n      width: \"500px\",\n      height: \"500px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GridContainer\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(10,20px)\",\n        backgroundColor: \"lightblue\"\n      },\n      children: grid.map((row, i) => row.map((col, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spot\",\n        onDragStart: e => e.preventDefault(),\n        onDragOver: e => {\n          e.preventDefault();\n          return false;\n        },\n        onDrop: e => handleDrop(e, i, j),\n        style: {\n          backgroundColor: \"white\",\n          height: \"18px\",\n          width: \"18px\",\n          border: \"solid 1px black\"\n        }\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships.ship4.reference,\n      className: \"ship4\",\n      draggable: true,\n      onDragEnd: e => ships.ship4.reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships.ship4.reference.current.style.display = \"none\");\n        currentShipRef.current = \"ship4\";\n        const diffX = e.clientX - ships.ship4.position.x;\n        const diffY = e.clientY - ships.ship4.position.y;\n        grabStartCoordsRefs.x.current = parseInt(diffX / gridSize);\n        grabStartCoordsRefs.y.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, \"ship4\"),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships.ship4.position.x,\n        top: ships.ship4.position.y,\n        width: (() => {\n          switch (ships.ship4.orientation) {\n            case \"horizontal\":\n              return `${gridSize * 4 - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships.ship4.orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * 4 - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships.ship3_1.reference,\n      className: \"ship3_1\",\n      draggable: true,\n      onDragEnd: e => ships.ship3_1.reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships.ship3_1.reference.current.style.display = \"none\");\n        currentShipRef.current = \"ship3_1\";\n        const diffX = e.clientX - ships.ship3_1.position.x;\n        const diffY = e.clientY - ships.ship3_1.position.y;\n        grabStartCoordsRefs.x.current = parseInt(diffX / gridSize);\n        grabStartCoordsRefs.y.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, \"ship3_1\"),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships.ship3_1.position.x,\n        top: ships.ship3_1.position.y,\n        width: (() => {\n          switch (ships.ship3_1.orientation) {\n            case \"horizontal\":\n              return `${gridSize * 3 - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships.ship3_1.orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * 3 - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: readyCheck,\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UIocOo91abgS8lObCI6b8Dz0R3E=\");\n\n_c = App;\nexport default App; // .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/App.js"],"names":["React","grid","i","push","Array","from","gridSize","App","handleDrop","e","dropRow","dropCol","errorHandle","shipObj","reference","current","style","borderColor","setTimeout","shipsObjRefCurrent","isShipPlacedOutsideGrid","stopPropagation","preventDefault","grabX","grabStartCoordsRefs","x","grabY","y","placeCol","Math","floor","placeRow","currentShipName","currentShipRef","ships","orientation","size","console","warn","shipsCopy","Object","assign","position","grabН","newMap","map","isPlaced","setShips","handleMouseClick","ship","button","row","col","dir","deepListCopy","l","JSON","parse","stringify","readyCheck","log","useState","ship4","useRef","ship3_1","backgroundColor","width","height","display","gridTemplateColumns","j","border","diffX","clientX","diffY","clientY","parseInt","left","top","cursor","right"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nlet grid = [];\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nlet gridSize = 20;\n\nfunction App() {\n  function handleDrop(e, dropRow, dropCol) {\n    function errorHandle() {\n      shipObj.reference.current.style.borderColor = \"red\";\n      setTimeout(() => (shipsObjRefCurrent.style.borderColor = \"blue\"), 500);\n      isShipPlacedOutsideGrid = true;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n\n    let isShipPlacedOutsideGrid = false;\n\n    const grabX = grabStartCoordsRefs.x.current;\n    const grabY = grabStartCoordsRefs.y.current;\n\n    const placeCol = Math.floor(\n      (dropCol * gridSize - grabX * gridSize + 8) / gridSize\n    );\n\n    const placeRow = Math.floor(\n      (dropRow * gridSize - grabY * gridSize + 8) / gridSize\n    );\n\n    const currentShipName = currentShipRef.current;\n    const shipObj = ships[currentShipName];\n    const shipsObjRefCurrent = shipObj.reference.current;\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        if (placeCol > 10 - shipObj.size || placeCol < 0) {\n          errorHandle();\n        }\n        break;\n      case \"vertical\":\n        if (placeRow > 10 - shipObj.size || placeRow < 0) {\n          errorHandle();\n        }\n        break;\n      default:\n        console.warn(\"wrong orientation in \");\n    }\n    if (!isShipPlacedOutsideGrid) {\n      let shipsCopy = Object.assign({}, ships);\n\n      shipsCopy[currentShipName].position.x =\n        dropCol * gridSize - grabX * gridSize + 8;\n      shipsCopy[currentShipName].position.y =\n        dropRow * gridSize - grabН * gridSize + 8;\n\n      let newMap = [];\n\n      // let startCol = parseInt(\n      //   shipsCopy[currentShipName].position.x / shipObj.size,\n      //   10\n      // );\n\n      // let startRow = parseInt(\n      //   shipsCopy[currentShipName].position.y / shipObj.size,\n      //   10\n      // );\n\n      for (let i = 0; i < shipObj.size; i++) {\n        switch (shipObj.orientation) {\n          case \"vertical\":\n            newMap.push([dropRow + i, dropCol]);\n            break;\n          case \"horizontal\":\n            newMap.push([dropRow, dropCol + i]);\n            break;\n          default:\n            console.warn(\"ship have wrong orientation\");\n        }\n      }\n\n      shipsCopy[currentShipName].map = newMap;\n      shipsCopy[currentShipName].isPlaced = true;\n      setShips(shipsCopy);\n    }\n    return false;\n  }\n\n  function handleMouseClick(e, ship) {\n    if (e.button !== 2) return;\n    let shipsCopy = Object.assign({}, ships);\n    if (ships[ship].isPlaced) {\n      var row = ships[ship].map[0][0];\n      var col = ships[ship].map[0][1];\n      switch (ships[ship].orientation) {\n        case \"vertical\":\n          if (col > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(\n              () => (ships[ship].reference.current.style.borderColor = \"blue\"),\n              500\n            );\n            return;\n          }\n          break;\n        case \"horizontal\":\n          if (row > 10 - ships[currentShipRef.current].size) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(\n              () => (ships[ship].reference.current.style.borderColor = \"blue\"),\n              500\n            );\n            return;\n          }\n          break;\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n      shipsCopy[ship].map = [];\n    }\n    switch (shipsCopy[ship].orientation) {\n      case \"horizontal\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row + i, col]);\n          }\n        }\n        shipsCopy[ship].orientation = \"vertical\";\n        break;\n      case \"vertical\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row, col + i]);\n          }\n        }\n        shipsCopy[ship].orientation = \"horizontal\";\n        break;\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n    console.dir(ships);\n    setShips(shipsCopy);\n  }\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return false;\n      console.log(\"field is ready for game!\");\n    }\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: { x: 10, y: 210 },\n      map: [],\n      isPlaced: false,\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: { x: 10, y: 240 },\n      map: [],\n      isPlaced: false,\n    },\n  });\n\n  const currentShipRef = React.useRef();\n  const grabStartCoordsRefs = { x: React.useRef(), y: React.useRef() };\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundColor: \"blanchedalmond\",\n        width: \"500px\",\n        height: \"500px\",\n      }}\n    >\n      <div\n        className=\"GridContainer\"\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(10,20px)\",\n          backgroundColor: \"lightblue\",\n        }}\n      >\n        {grid.map((row, i) =>\n          row.map((col, j) => (\n            <div\n              className=\"spot\"\n              key={`${i}-${j}`}\n              onDragStart={(e) => e.preventDefault()}\n              onDragOver={(e) => {\n                e.preventDefault();\n                return false;\n              }}\n              onDrop={(e) => handleDrop(e, i, j)}\n              style={{\n                backgroundColor: \"white\",\n                height: \"18px\",\n                width: \"18px\",\n                border: \"solid 1px black\",\n              }}\n            />\n          ))\n        )}\n      </div>\n      <div\n        ref={ships.ship4.reference}\n        className=\"ship4\"\n        draggable\n        onDragEnd={(e) =>\n          (ships.ship4.reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships.ship4.reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = \"ship4\";\n          const diffX = e.clientX - ships.ship4.position.x;\n          const diffY = e.clientY - ships.ship4.position.y;\n          grabStartCoordsRefs.x.current = parseInt(diffX / gridSize);\n          grabStartCoordsRefs.y.current = parseInt(diffY / gridSize);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, \"ship4\")}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships.ship4.position.x,\n          top: ships.ship4.position.y,\n          width: (() => {\n            switch (ships.ship4.orientation) {\n              case \"horizontal\":\n                return `${gridSize * 4 - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships.ship4.orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${gridSize * 4 - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n      <div\n        ref={ships.ship3_1.reference}\n        className=\"ship3_1\"\n        draggable\n        onDragEnd={(e) =>\n          (ships.ship3_1.reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships.ship3_1.reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = \"ship3_1\";\n          const diffX = e.clientX - ships.ship3_1.position.x;\n          const diffY = e.clientY - ships.ship3_1.position.y;\n          grabStartCoordsRefs.x.current = parseInt(diffX / gridSize);\n          grabStartCoordsRefs.y.current = parseInt(diffY / gridSize);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, \"ship3_1\")}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships.ship3_1.position.x,\n          top: ships.ship3_1.position.y,\n          width: (() => {\n            switch (ships.ship3_1.orientation) {\n              case \"horizontal\":\n                return `${gridSize * 3 - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships.ship3_1.orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${gridSize * 3 - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n      <button style={{ position: \"absolute\", right: 0 }} onClick={readyCheck}>\n        Ready\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n"]},"metadata":{},"sourceType":"module"}