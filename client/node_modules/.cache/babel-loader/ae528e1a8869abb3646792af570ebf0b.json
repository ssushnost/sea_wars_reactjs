{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\components\\\\AllyGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst grid = [];\n\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nconst neighborsMoves = [[0, -1], [-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1]];\n\nfunction errorHandle(shipsObjRefCurrent) {\n  shipsObjRefCurrent.style.borderColor = \"red\";\n  setTimeout(() => shipsObjRefCurrent.style.borderColor = \"blue\", 500);\n  return false;\n}\n\nfunction multidimensionalIncludes(multidimensionalArray, searchArray) {\n  return multidimensionalArray.some(row => JSON.stringify(row) === JSON.stringify(searchArray));\n}\n\nexport default function AllyGrid(props) {\n  _s();\n\n  const gridSize = props.gridSize;\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_2: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 280\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_1: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_2: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 260\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_3: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 310\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_1: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_2: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 240\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_3: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 270\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_4: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 300\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    }\n  });\n\n  function handleMouseClick(e, shipName) {\n    if (e.button !== 2) return;\n    const shipObj = ships[shipName];\n    console.dir(shipObj);\n    const shipMap = shipObj.map;\n    const shipObjRefCurrent = shipObj.reference.current;\n    let shipsCopy = Object.assign({}, ships);\n\n    if (shipObj.isPlaced) {\n      var row = shipMap[0][0];\n      var col = shipMap[0][1];\n\n      switch (shipObj.orientation) {\n        case \"vertical\":\n          if (col > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n\n        case \"horizontal\":\n          if (row > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\n          break;\n\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n    }\n\n    let allNeighborsExceptCurrentShip = [];\n\n    for (const ship in ships) {\n      if (ship !== shipName) {\n        ships[ship].neighbors.forEach(neighborPair => allNeighborsExceptCurrentShip.push(neighborPair));\n      }\n    }\n\n    let newMap = [];\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (multidimensionalIncludes(allNeighborsExceptCurrentShip, [row + i, col])) return errorHandle(shipObjRefCurrent);\n          newMap.push([row + i, col]);\n        }\n\n        shipsCopy[shipName].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        for (let i = 0; i < shipObj.size; i++) {\n          if (multidimensionalIncludes(allNeighborsExceptCurrentShip, [row, col + i])) return errorHandle(shipObjRefCurrent);\n          newMap.push([row, col + i]);\n        }\n\n        shipsCopy[shipName].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    shipsCopy[shipName].map = newMap;\n    let newNeighbors = [];\n    newMap.forEach(coords => {\n      neighborsMoves.forEach(move => {\n        const neighborsRow = coords[0] + move[0];\n        const neighborsCol = coords[1] + move[1];\n        const neighborsArray = [neighborsRow, neighborsCol];\n        if (neighborsRow >= 0 && neighborsRow <= 9 && neighborsCol >= 0 && neighborsCol <= 9) if (!multidimensionalIncludes(newNeighbors, neighborsArray) && !multidimensionalIncludes(newMap, neighborsArray)) newNeighbors.push(neighborsArray);\n      });\n    });\n    shipsCopy[shipName].neighbors = newNeighbors;\n    setShips(shipsCopy);\n  }\n\n  let shipDivs = [];\n\n  for (const ship in ships) {\n    shipDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships[ship].reference,\n      draggable: true,\n      onDragEnd: e => ships[ship].reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships[ship].reference.current.style.display = \"none\");\n        currentShipRef.current = ship;\n        const diffX = e.clientX - ships[ship].position.x;\n        const diffY = e.clientY - ships[ship].position.y;\n        grabXRef.current = parseInt(diffX / gridSize);\n        grabYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, ship),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships[ship].position.x,\n        top: ships[ship].position.y,\n        width: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, ship, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this));\n  }\n\n  let gridDivs = [];\n  grid.forEach((row, i) => {});\n\n  function handleDrop(e, dropRow, dropCol) {\n    e.stopPropagation();\n    e.preventDefault();\n    const currentShipName = currentShipRef.current;\n    const shipObj = ships[currentShipName];\n    const shipsObjRefCurrent = shipObj.reference.current;\n    const grabX = grabXRef.current;\n    const grabY = grabYRef.current;\n    const placeX = dropCol * gridSize - grabX * gridSize + 8;\n    const placeY = dropRow * gridSize - grabY * gridSize + 8;\n    const placeCol = Math.floor(placeX / gridSize);\n    const placeRow = Math.floor(placeY / gridSize);\n\n    switch (shipObj.orientation) {\n      case \"horizontal\":\n        if (placeCol > 10 - shipObj.size || placeCol < 0) return errorHandle(shipsObjRefCurrent);\n        break;\n\n      case \"vertical\":\n        if (placeRow > 10 - shipObj.size || placeRow < 0) return errorHandle(shipsObjRefCurrent);\n        break;\n\n      default:\n        return console.warn(\"ship have wrong orientation in dropHandle misplace check\");\n    }\n\n    let shipsCopy = Object.assign({}, ships);\n    let newMap = [];\n    let newNeighbors = [];\n\n    switch (shipObj.orientation) {\n      case \"vertical\":\n        for (let i = 0; i < shipObj.size; i++) {\n          const row = placeRow + i;\n          const col = placeCol;\n          const newMapPair = [row, col];\n\n          for (const shipName in ships) {\n            if (shipName !== currentShipName) {\n              if (multidimensionalIncludes(shipsCopy[shipName].neighbors, newMapPair)) return errorHandle(shipsObjRefCurrent);\n            }\n          }\n\n          newMap.push(newMapPair);\n        }\n\n        break;\n\n      case \"horizontal\":\n        for (let i = 0; i < shipObj.size; i++) {\n          const row = placeRow;\n          const col = placeCol + i;\n          const newMapPair = [row, col];\n\n          for (const shipName in ships) {\n            if (shipName !== currentShipName) {\n              if (multidimensionalIncludes(shipsCopy[shipName].neighbors, newMapPair)) return errorHandle(shipsObjRefCurrent);\n            }\n          }\n\n          newMap.push(newMapPair);\n        }\n\n        break;\n\n      default:\n        return console.warn(\"ship have wrong orientation in dropHandle, newMap loop\");\n    }\n\n    shipsCopy[currentShipName].map = newMap; // calculate new neighbors\n\n    newMap.forEach(coords => {\n      neighborsMoves.forEach(move => {\n        const neighborsRow = coords[0] + move[0];\n        const neighborsCol = coords[1] + move[1];\n        const neighborsArray = [neighborsRow, neighborsCol];\n        if (neighborsRow >= 0 && neighborsRow <= 9 && neighborsCol >= 0 && neighborsCol <= 9) if (!multidimensionalIncludes(newNeighbors, neighborsArray) && !multidimensionalIncludes(newMap, neighborsArray)) newNeighbors.push(neighborsArray);\n      });\n    });\n    shipsCopy[currentShipName].neighbors = newNeighbors;\n    shipsCopy[currentShipName].position.x = placeX;\n    shipsCopy[currentShipName].position.y = placeY;\n    shipsCopy[currentShipName].isPlaced = true;\n    setShips(shipsCopy);\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GridContainer\",\n      children: grid.map((row, i) => row.map((col, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spot\",\n        onDragStart: e => e.preventDefault(),\n        onDragOver: e => {\n          e.preventDefault();\n          return false;\n        },\n        onDrop: e => handleDrop(e, i, j),\n        style: {\n          backgroundColor: \"white\",\n          height: \"18px\",\n          width: \"18px\",\n          border: \"solid 1px black\"\n        }\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), shipDivs]\n  }, void 0, true);\n}\n\n_s(AllyGrid, \"VKJUkwfKfmQxk+aJvSMYLv78XVg=\");\n\n_c = AllyGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllyGrid\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/components/AllyGrid.js"],"names":["React","grid","i","push","Array","from","neighborsMoves","errorHandle","shipsObjRefCurrent","style","borderColor","setTimeout","multidimensionalIncludes","multidimensionalArray","searchArray","some","row","JSON","stringify","AllyGrid","props","gridSize","currentShipRef","useRef","grabXRef","grabYRef","ships","setShips","useState","ship4","orientation","size","reference","position","x","y","neighbors","map","isPlaced","ship3_1","ship3_2","ship2_1","ship2_2","ship2_3","ship1_1","ship1_2","ship1_3","ship1_4","handleMouseClick","e","shipName","button","shipObj","console","dir","shipMap","shipObjRefCurrent","current","shipsCopy","Object","assign","col","warn","allNeighborsExceptCurrentShip","ship","forEach","neighborPair","newMap","newNeighbors","coords","move","neighborsRow","neighborsCol","neighborsArray","shipDivs","display","diffX","clientX","diffY","clientY","parseInt","preventDefault","left","top","width","height","border","cursor","gridDivs","handleDrop","dropRow","dropCol","stopPropagation","currentShipName","grabX","grabY","placeX","placeY","placeCol","Math","floor","placeRow","newMapPair","j","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst grid = [];\r\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\r\n\r\nconst neighborsMoves = [\r\n  [0, -1],\r\n  [-1, -1],\r\n  [-1, 0],\r\n  [-1, 1],\r\n  [0, 1],\r\n  [1, 1],\r\n  [1, 0],\r\n  [1, -1],\r\n];\r\n\r\nfunction errorHandle(shipsObjRefCurrent) {\r\n  shipsObjRefCurrent.style.borderColor = \"red\";\r\n  setTimeout(() => (shipsObjRefCurrent.style.borderColor = \"blue\"), 500);\r\n  return false;\r\n}\r\n\r\nfunction multidimensionalIncludes(multidimensionalArray, searchArray) {\r\n  return multidimensionalArray.some(\r\n    (row) => JSON.stringify(row) === JSON.stringify(searchArray)\r\n  );\r\n}\r\n\r\nexport default function AllyGrid(props) {\r\n  const gridSize = props.gridSize;\r\n\r\n  const currentShipRef = React.useRef();\r\n  const grabXRef = React.useRef();\r\n  const grabYRef = React.useRef();\r\n\r\n  const [ships, setShips] = React.useState({\r\n    ship4: {\r\n      orientation: \"horizontal\",\r\n      size: 4,\r\n      reference: React.useRef(),\r\n      position: { x: 10, y: 210 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship3_1: {\r\n      orientation: \"horizontal\",\r\n      size: 3,\r\n      reference: React.useRef(),\r\n      position: { x: 100, y: 210 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship3_2: {\r\n      orientation: \"horizontal\",\r\n      size: 3,\r\n      reference: React.useRef(),\r\n      position: { x: 100, y: 280 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship2_1: {\r\n      orientation: \"horizontal\",\r\n      size: 2,\r\n      reference: React.useRef(),\r\n      position: { x: 170, y: 210 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship2_2: {\r\n      orientation: \"horizontal\",\r\n      size: 2,\r\n      reference: React.useRef(),\r\n      position: { x: 170, y: 260 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship2_3: {\r\n      orientation: \"horizontal\",\r\n      size: 2,\r\n      reference: React.useRef(),\r\n      position: { x: 170, y: 310 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship1_1: {\r\n      orientation: \"horizontal\",\r\n      size: 1,\r\n      reference: React.useRef(),\r\n      position: { x: 220, y: 210 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship1_2: {\r\n      orientation: \"horizontal\",\r\n      size: 1,\r\n      reference: React.useRef(),\r\n      position: { x: 220, y: 240 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship1_3: {\r\n      orientation: \"horizontal\",\r\n      size: 1,\r\n      reference: React.useRef(),\r\n      position: { x: 220, y: 270 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n    ship1_4: {\r\n      orientation: \"horizontal\",\r\n      size: 1,\r\n      reference: React.useRef(),\r\n      position: { x: 220, y: 300 },\r\n      neighbors: [],\r\n      map: [],\r\n      isPlaced: false,\r\n    },\r\n  });\r\n\r\n  function handleMouseClick(e, shipName) {\r\n    if (e.button !== 2) return;\r\n\r\n    const shipObj = ships[shipName];\r\n    console.dir(shipObj);\r\n    const shipMap = shipObj.map;\r\n    const shipObjRefCurrent = shipObj.reference.current;\r\n\r\n    let shipsCopy = Object.assign({}, ships);\r\n\r\n    if (shipObj.isPlaced) {\r\n      var row = shipMap[0][0];\r\n      var col = shipMap[0][1];\r\n\r\n      switch (shipObj.orientation) {\r\n        case \"vertical\":\r\n          if (col > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\r\n          break;\r\n        case \"horizontal\":\r\n          if (row > 10 - shipObj.size) return errorHandle(shipObjRefCurrent);\r\n          break;\r\n        default:\r\n          console.warn(\"wrong ship orientation in start rmb handler\");\r\n      }\r\n    }\r\n\r\n    let allNeighborsExceptCurrentShip = [];\r\n    for (const ship in ships) {\r\n      if (ship !== shipName) {\r\n        ships[ship].neighbors.forEach((neighborPair) =>\r\n          allNeighborsExceptCurrentShip.push(neighborPair)\r\n        );\r\n      }\r\n    }\r\n\r\n    let newMap = [];\r\n\r\n    switch (shipObj.orientation) {\r\n      case \"horizontal\":\r\n        for (let i = 0; i < shipObj.size; i++) {\r\n          if (\r\n            multidimensionalIncludes(allNeighborsExceptCurrentShip, [\r\n              row + i,\r\n              col,\r\n            ])\r\n          )\r\n            return errorHandle(shipObjRefCurrent);\r\n          newMap.push([row + i, col]);\r\n        }\r\n\r\n        shipsCopy[shipName].orientation = \"vertical\";\r\n        break;\r\n\r\n      case \"vertical\":\r\n        for (let i = 0; i < shipObj.size; i++) {\r\n          if (\r\n            multidimensionalIncludes(allNeighborsExceptCurrentShip, [\r\n              row,\r\n              col + i,\r\n            ])\r\n          )\r\n            return errorHandle(shipObjRefCurrent);\r\n          newMap.push([row, col + i]);\r\n        }\r\n\r\n        shipsCopy[shipName].orientation = \"horizontal\";\r\n        break;\r\n\r\n      default:\r\n        console.warn(\"wrong ship orientation in rmb\");\r\n    }\r\n\r\n    shipsCopy[shipName].map = newMap;\r\n\r\n    let newNeighbors = [];\r\n\r\n    newMap.forEach((coords) => {\r\n      neighborsMoves.forEach((move) => {\r\n        const neighborsRow = coords[0] + move[0];\r\n        const neighborsCol = coords[1] + move[1];\r\n        const neighborsArray = [neighborsRow, neighborsCol];\r\n        if (\r\n          neighborsRow >= 0 &&\r\n          neighborsRow <= 9 &&\r\n          neighborsCol >= 0 &&\r\n          neighborsCol <= 9\r\n        )\r\n          if (\r\n            !multidimensionalIncludes(newNeighbors, neighborsArray) &&\r\n            !multidimensionalIncludes(newMap, neighborsArray)\r\n          )\r\n            newNeighbors.push(neighborsArray);\r\n      });\r\n    });\r\n    shipsCopy[shipName].neighbors = newNeighbors;\r\n\r\n    setShips(shipsCopy);\r\n  }\r\n\r\n  let shipDivs = [];\r\n  for (const ship in ships) {\r\n    shipDivs.push(\r\n      <div\r\n        ref={ships[ship].reference}\r\n        key={ship}\r\n        draggable\r\n        onDragEnd={(e) =>\r\n          (ships[ship].reference.current.style.display = \"inline\")\r\n        }\r\n        onDragStart={(e) => {\r\n          setTimeout(\r\n            () => (ships[ship].reference.current.style.display = \"none\")\r\n          );\r\n          currentShipRef.current = ship;\r\n          const diffX = e.clientX - ships[ship].position.x;\r\n          const diffY = e.clientY - ships[ship].position.y;\r\n          grabXRef.current = parseInt(diffX / gridSize);\r\n          grabYRef.current = parseInt(diffY / gridSize);\r\n        }}\r\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, ship)}\r\n        onContextMenu={(e) => e.preventDefault()}\r\n        style={{\r\n          position: \"absolute\",\r\n          left: ships[ship].position.x,\r\n          top: ships[ship].position.y,\r\n          width: (() => {\r\n            switch (ships[ship].orientation) {\r\n              case \"horizontal\":\r\n                return `${gridSize * ships[ship].size - 4}px`;\r\n              case \"vertical\":\r\n                return \"16px\";\r\n              default:\r\n                return \"100px\";\r\n            }\r\n          })(),\r\n          height: (() => {\r\n            switch (ships[ship].orientation) {\r\n              case \"horizontal\":\r\n                return \"16px\";\r\n              case \"vertical\":\r\n                return `${gridSize * ships[ship].size - 4}px`;\r\n              default:\r\n                return \"100px\";\r\n            }\r\n          })(),\r\n          border: \"solid 2px blue\",\r\n          cursor: \"grab\",\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n\r\n  let gridDivs = [];\r\n  grid.forEach((row,i) => {\r\n    \r\n  })\r\n\r\n  function handleDrop(e, dropRow, dropCol) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    const currentShipName = currentShipRef.current;\r\n    const shipObj = ships[currentShipName];\r\n    const shipsObjRefCurrent = shipObj.reference.current;\r\n\r\n    const grabX = grabXRef.current;\r\n    const grabY = grabYRef.current;\r\n\r\n    const placeX = dropCol * gridSize - grabX * gridSize + 8;\r\n    const placeY = dropRow * gridSize - grabY * gridSize + 8;\r\n\r\n    const placeCol = Math.floor(placeX / gridSize);\r\n    const placeRow = Math.floor(placeY / gridSize);\r\n\r\n    switch (shipObj.orientation) {\r\n      case \"horizontal\":\r\n        if (placeCol > 10 - shipObj.size || placeCol < 0)\r\n          return errorHandle(shipsObjRefCurrent);\r\n        break;\r\n\r\n      case \"vertical\":\r\n        if (placeRow > 10 - shipObj.size || placeRow < 0)\r\n          return errorHandle(shipsObjRefCurrent);\r\n        break;\r\n\r\n      default:\r\n        return console.warn(\r\n          \"ship have wrong orientation in dropHandle misplace check\"\r\n        );\r\n    }\r\n\r\n    let shipsCopy = Object.assign({}, ships);\r\n\r\n    let newMap = [];\r\n    let newNeighbors = [];\r\n\r\n    switch (shipObj.orientation) {\r\n      case \"vertical\":\r\n        for (let i = 0; i < shipObj.size; i++) {\r\n          const row = placeRow + i;\r\n          const col = placeCol;\r\n          const newMapPair = [row, col];\r\n          for (const shipName in ships) {\r\n            if (shipName !== currentShipName) {\r\n              if (\r\n                multidimensionalIncludes(\r\n                  shipsCopy[shipName].neighbors,\r\n                  newMapPair\r\n                )\r\n              )\r\n                return errorHandle(shipsObjRefCurrent);\r\n            }\r\n          }\r\n          newMap.push(newMapPair);\r\n        }\r\n        break;\r\n      case \"horizontal\":\r\n        for (let i = 0; i < shipObj.size; i++) {\r\n          const row = placeRow;\r\n          const col = placeCol + i;\r\n          const newMapPair = [row, col];\r\n          for (const shipName in ships) {\r\n            if (shipName !== currentShipName) {\r\n              if (\r\n                multidimensionalIncludes(\r\n                  shipsCopy[shipName].neighbors,\r\n                  newMapPair\r\n                )\r\n              )\r\n                return errorHandle(shipsObjRefCurrent);\r\n            }\r\n          }\r\n          newMap.push(newMapPair);\r\n        }\r\n        break;\r\n      default:\r\n        return console.warn(\r\n          \"ship have wrong orientation in dropHandle, newMap loop\"\r\n        );\r\n    }\r\n    shipsCopy[currentShipName].map = newMap;\r\n\r\n    // calculate new neighbors\r\n    newMap.forEach((coords) => {\r\n      neighborsMoves.forEach((move) => {\r\n        const neighborsRow = coords[0] + move[0];\r\n        const neighborsCol = coords[1] + move[1];\r\n        const neighborsArray = [neighborsRow, neighborsCol];\r\n        if (\r\n          neighborsRow >= 0 &&\r\n          neighborsRow <= 9 &&\r\n          neighborsCol >= 0 &&\r\n          neighborsCol <= 9\r\n        )\r\n          if (\r\n            !multidimensionalIncludes(newNeighbors, neighborsArray) &&\r\n            !multidimensionalIncludes(newMap, neighborsArray)\r\n          )\r\n            newNeighbors.push(neighborsArray);\r\n      });\r\n    });\r\n    shipsCopy[currentShipName].neighbors = newNeighbors;\r\n\r\n    shipsCopy[currentShipName].position.x = placeX;\r\n    shipsCopy[currentShipName].position.y = placeY;\r\n\r\n    shipsCopy[currentShipName].isPlaced = true;\r\n    setShips(shipsCopy);\r\n\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"GridContainer\">\r\n        {grid.map((row, i) =>\r\n          row.map((col, j) => (\r\n            <div\r\n              className=\"spot\"\r\n              key={`${i}-${j}`}\r\n              onDragStart={(e) => e.preventDefault()}\r\n              onDragOver={(e) => {\r\n                e.preventDefault();\r\n                return false;\r\n              }}\r\n              onDrop={(e) => handleDrop(e, i, j)}\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                height: \"18px\",\r\n                width: \"18px\",\r\n                border: \"solid 1px black\",\r\n              }}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n      {shipDivs}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}