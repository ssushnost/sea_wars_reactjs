{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars\\\\seawars-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [grid, setGrid] = useState(() => {\n    const temp = [];\n\n    for (let i = 0; i < 10; i++) temp.push(Array.from(Array(10), () => \"empty\"));\n\n    return temp;\n  });\n  useEffect(() => {\n    placeShips();\n    console.log(\"useeffect did mount\");\n  }, []);\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function gridOnClickHandler(ri, ci) {\n    let gridCopy = deepListCopy(grid);\n\n    if (grid[ri][ci] == \"ship\") {\n      grid[ri][ci] = \"shit-hitted\";\n    }\n\n    setGrid(gridCopy);\n    console.log(ri, ci);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(10,20px)\"\n    },\n    children: grid.map((row, i) => row.map((col, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spot\",\n      onClick: () => gridOnClickHandler(i, j),\n      style: {\n        backgroundColor: () => {\n          if (grid[i][j] === 'ship') return undefined;\n          if (grid[i][j] === 'empty') return 'white';\n          if (grid[i][j] === 'shit-hitted') return 'gray';\n        },\n        height: \"18px\",\n        width: \"18px\",\n        border: \"solid 1px black\"\n      }\n    }, `${i}-${j}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RT6zd+jXcUqf9/EZLtOro9qkrAQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars/seawars-react/src/App.js"],"names":["useEffect","useState","App","grid","setGrid","temp","i","push","Array","from","placeShips","console","log","deepListCopy","l","JSON","parse","stringify","gridOnClickHandler","ri","ci","gridCopy","display","gridTemplateColumns","map","row","col","j","backgroundColor","undefined","height","width","border"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,MAAM;AACrC,UAAMI,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACED,IAAI,CAACE,IAAL,CAAUC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAhB,EAAsB,MAAM,OAA5B,CAAV;;AACF,WAAOH,IAAP;AACD,GAL+B,CAAhC;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,CAAf,CAAX,CAAP;AACD;;AAED,WAASI,kBAAT,CAA4BC,EAA5B,EAAgCC,EAAhC,EAAoC;AAClC,QAAIC,QAAQ,GAAGR,YAAY,CAACV,IAAD,CAA3B;;AACA,QAAIA,IAAI,CAACgB,EAAD,CAAJ,CAASC,EAAT,KAAgB,MAApB,EAA4B;AAC1BjB,MAAAA,IAAI,CAACgB,EAAD,CAAJ,CAASC,EAAT,IAAe,aAAf;AACD;;AACDhB,IAAAA,OAAO,CAACiB,QAAD,CAAP;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ,EAAgBC,EAAhB;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,mBAAmB,EAAE;AAAxC,KAFT;AAAA,cAIGpB,IAAI,CAACqB,GAAL,CAAS,CAACC,GAAD,EAAMnB,CAAN,KACRmB,GAAG,CAACD,GAAJ,CAAQ,CAACE,GAAD,EAAMC,CAAN,kBACN;AACE,MAAA,SAAS,EAAC,MADZ;AAGE,MAAA,OAAO,EAAE,MAAMT,kBAAkB,CAACZ,CAAD,EAAIqB,CAAJ,CAHnC;AAIE,MAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,MAAM;AACrB,cAAIzB,IAAI,CAACG,CAAD,CAAJ,CAAQqB,CAAR,MAAe,MAAnB,EAA2B,OAAOE,SAAP;AAC3B,cAAI1B,IAAI,CAACG,CAAD,CAAJ,CAAQqB,CAAR,MAAe,OAAnB,EAA4B,OAAO,OAAP;AAC5B,cAAIxB,IAAI,CAACG,CAAD,CAAJ,CAAQqB,CAAR,MAAe,aAAnB,EAAkC,OAAO,MAAP;AACnC,SALI;AAMLG,QAAAA,MAAM,EAAE,MANH;AAOLC,QAAAA,KAAK,EAAE,MAPF;AAQLC,QAAAA,MAAM,EAAE;AARH;AAJT,OAEQ,GAAE1B,CAAE,IAAGqB,CAAE,EAFjB;AAAA;AAAA;AAAA;AAAA,YADF,CADD;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAnDQzB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [grid, setGrid] = useState(() => {\n    const temp = [];\n    for (let i = 0; i < 10; i++)\n      temp.push(Array.from(Array(10), () => \"empty\"));\n    return temp;\n  });\n  useEffect(() => {\n    placeShips();\n    console.log(\"useeffect did mount\");\n  }, []);\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function gridOnClickHandler(ri, ci) {\n    let gridCopy = deepListCopy(grid);\n    if (grid[ri][ci] == \"ship\") {\n      grid[ri][ci] = \"shit-hitted\";\n    }\n    setGrid(gridCopy);\n    console.log(ri, ci);\n  }\n\n  return (\n    <div\n      className=\"App\"\n      style={{ display: \"grid\", gridTemplateColumns: \"repeat(10,20px)\" }}\n    >\n      {grid.map((row, i) =>\n        row.map((col, j) => (\n          <div\n            className=\"spot\"\n            key={`${i}-${j}`}\n            onClick={() => gridOnClickHandler(i, j)}\n            style={{\n              backgroundColor: () => {\n                if (grid[i][j] === 'ship') return undefined\n                if (grid[i][j] === 'empty') return 'white'\n                if (grid[i][j] === 'shit-hitted') return 'gray'\n              },\n              height: \"18px\",\n              width: \"18px\",\n              border: \"solid 1px black\",\n            }}\n          ></div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}