{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\components\\\\Ships.js\";\nimport React from \"react\";\nimport { ships } from \"../helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Ships() {\n  let shipDivs = [];\n\n  for (const ship in ships) {\n    shipDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships[ship].reference,\n      className: ship,\n      draggable: true,\n      onDragEnd: e => ships[ship].reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships[ship].reference.current.style.display = \"none\");\n        currentShipRef.current = ship;\n        const diffX = e.clientX - ships[ship].position.x;\n        const diffY = e.clientY - ships[ship].position.y;\n        grabXRef.current = parseInt(diffX / gridSize);\n        grabYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, ship),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships[ship].position.x,\n        top: ships[ship].position.y,\n        width: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, ship, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this));\n  }\n\n  return shipDivs;\n}\n_c = Ships;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ships\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/components/Ships.js"],"names":["React","ships","Ships","shipDivs","ship","push","reference","e","current","style","display","setTimeout","currentShipRef","diffX","clientX","position","x","diffY","clientY","y","grabXRef","parseInt","gridSize","grabYRef","handleMouseClick","preventDefault","left","top","width","orientation","size","height","border","cursor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,WAAtB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,MAAIC,QAAQ,GAAG,EAAf;;AAEA,OAAK,MAAMC,IAAX,IAAmBH,KAAnB,EAA0B;AACxBE,IAAAA,QAAQ,CAACE,IAAT,eACE;AACE,MAAA,GAAG,EAAEJ,KAAK,CAACG,IAAD,CAAL,CAAYE,SADnB;AAGE,MAAA,SAAS,EAAEF,IAHb;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,EAAGG,CAAD,IACRN,KAAK,CAACG,IAAD,CAAL,CAAYE,SAAZ,CAAsBE,OAAtB,CAA8BC,KAA9B,CAAoCC,OAApC,GAA8C,QANnD;AAQE,MAAA,WAAW,EAAGH,CAAD,IAAO;AAClBI,QAAAA,UAAU,CACR,MAAOV,KAAK,CAACG,IAAD,CAAL,CAAYE,SAAZ,CAAsBE,OAAtB,CAA8BC,KAA9B,CAAoCC,OAApC,GAA8C,MAD7C,CAAV;AAGAE,QAAAA,cAAc,CAACJ,OAAf,GAAyBJ,IAAzB;AACA,cAAMS,KAAK,GAAGN,CAAC,CAACO,OAAF,GAAYb,KAAK,CAACG,IAAD,CAAL,CAAYW,QAAZ,CAAqBC,CAA/C;AACA,cAAMC,KAAK,GAAGV,CAAC,CAACW,OAAF,GAAYjB,KAAK,CAACG,IAAD,CAAL,CAAYW,QAAZ,CAAqBI,CAA/C;AACAC,QAAAA,QAAQ,CAACZ,OAAT,GAAmBa,QAAQ,CAACR,KAAK,GAAGS,QAAT,CAA3B;AACAC,QAAAA,QAAQ,CAACf,OAAT,GAAmBa,QAAQ,CAACJ,KAAK,GAAGK,QAAT,CAA3B;AACD,OAjBH;AAkBE,MAAA,SAAS,EAAGf,CAAD,IAAOI,UAAU,CAACa,gBAAD,EAAmB,CAAnB,EAAsBjB,CAAtB,EAAyBH,IAAzB,CAlB9B;AAmBE,MAAA,aAAa,EAAGG,CAAD,IAAOA,CAAC,CAACkB,cAAF,EAnBxB;AAoBE,MAAA,KAAK,EAAE;AACLV,QAAAA,QAAQ,EAAE,UADL;AAELW,QAAAA,IAAI,EAAEzB,KAAK,CAACG,IAAD,CAAL,CAAYW,QAAZ,CAAqBC,CAFtB;AAGLW,QAAAA,GAAG,EAAE1B,KAAK,CAACG,IAAD,CAAL,CAAYW,QAAZ,CAAqBI,CAHrB;AAILS,QAAAA,KAAK,EAAE,CAAC,MAAM;AACZ,kBAAQ3B,KAAK,CAACG,IAAD,CAAL,CAAYyB,WAApB;AACE,iBAAK,YAAL;AACE,qBAAQ,GAAEP,QAAQ,GAAGrB,KAAK,CAACG,IAAD,CAAL,CAAY0B,IAAvB,GAA8B,CAAE,IAA1C;;AACF,iBAAK,UAAL;AACE,qBAAO,MAAP;;AACF;AACE,qBAAO,OAAP;AANJ;AAQD,SATM,GAJF;AAcLC,QAAAA,MAAM,EAAE,CAAC,MAAM;AACb,kBAAQ9B,KAAK,CAACG,IAAD,CAAL,CAAYyB,WAApB;AACE,iBAAK,YAAL;AACE,qBAAO,MAAP;;AACF,iBAAK,UAAL;AACE,qBAAQ,GAAEP,QAAQ,GAAGrB,KAAK,CAACG,IAAD,CAAL,CAAY0B,IAAvB,GAA8B,CAAE,IAA1C;;AACF;AACE,qBAAO,OAAP;AANJ;AAQD,SATO,GAdH;AAwBLE,QAAAA,MAAM,EAAE,gBAxBH;AAyBLC,QAAAA,MAAM,EAAE;AAzBH;AApBT,OAEO7B,IAFP;AAAA;AAAA;AAAA;AAAA,YADF;AAkDD;;AAED,SAAOD,QAAP;AACD;KAzDuBD,K","sourcesContent":["import React from \"react\";\r\nimport { ships } from \"../helper\";\r\n\r\nexport default function Ships() {\r\n  let shipDivs = [];\r\n\r\n  for (const ship in ships) {\r\n    shipDivs.push(\r\n      <div\r\n        ref={ships[ship].reference}\r\n        key={ship}\r\n        className={ship}\r\n        draggable\r\n        onDragEnd={(e) =>\r\n          (ships[ship].reference.current.style.display = \"inline\")\r\n        }\r\n        onDragStart={(e) => {\r\n          setTimeout(\r\n            () => (ships[ship].reference.current.style.display = \"none\")\r\n          );\r\n          currentShipRef.current = ship;\r\n          const diffX = e.clientX - ships[ship].position.x;\r\n          const diffY = e.clientY - ships[ship].position.y;\r\n          grabXRef.current = parseInt(diffX / gridSize);\r\n          grabYRef.current = parseInt(diffY / gridSize);\r\n        }}\r\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, ship)}\r\n        onContextMenu={(e) => e.preventDefault()}\r\n        style={{\r\n          position: \"absolute\",\r\n          left: ships[ship].position.x,\r\n          top: ships[ship].position.y,\r\n          width: (() => {\r\n            switch (ships[ship].orientation) {\r\n              case \"horizontal\":\r\n                return `${gridSize * ships[ship].size - 4}px`;\r\n              case \"vertical\":\r\n                return \"16px\";\r\n              default:\r\n                return \"100px\";\r\n            }\r\n          })(),\r\n          height: (() => {\r\n            switch (ships[ship].orientation) {\r\n              case \"horizontal\":\r\n                return \"16px\";\r\n              case \"vertical\":\r\n                return `${gridSize * ships[ship].size - 4}px`;\r\n              default:\r\n                return \"100px\";\r\n            }\r\n          })(),\r\n          border: \"solid 2px blue\",\r\n          cursor: \"grab\",\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n\r\n  return shipDivs;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}