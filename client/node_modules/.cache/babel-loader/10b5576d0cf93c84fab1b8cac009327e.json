{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Grid from \"./components/Grid.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridSize = 20;\n\nfunction App() {\n  _s();\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return console.log(\"Not all ships placed\");\n    }\n\n    console.log(\"field is ready for game!\");\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship3_2: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: {\n        x: 100,\n        y: 280\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_1: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_2: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 260\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship2_3: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: {\n        x: 170,\n        y: 310\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_1: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 210\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_2: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 240\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_3: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 270\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    },\n    ship1_4: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: {\n        x: 220,\n        y: 300\n      },\n      neighbors: [],\n      map: [],\n      isPlaced: false\n    }\n  });\n  let shipDivs = [];\n\n  for (const ship in ships) {\n    shipDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships[ship].reference,\n      className: ship,\n      draggable: true,\n      onDragEnd: e => ships[ship].reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships[ship].reference.current.style.display = \"none\");\n        currentShipRef.current = ship;\n        const diffX = e.clientX - ships[ship].position.x;\n        const diffY = e.clientY - ships[ship].position.y;\n        grabXRef.current = parseInt(diffX / gridSize);\n        grabYRef.current = parseInt(diffY / gridSize);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, ship),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships[ship].position.x,\n        top: ships[ship].position.y,\n        width: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships[ship].orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${gridSize * ships[ship].size - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, ship, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this));\n  }\n\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      width: \"500px\",\n      height: \"500px\"\n    },\n    children: [shipDivs, /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: readyCheck,\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AKqWwLbRF+EujNQCNECMLq1/N24=\");\n\n_c = App;\nexport default App; // .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/App.js"],"names":["React","Grid","gridSize","App","deepListCopy","l","JSON","parse","stringify","readyCheck","ship","ships","isPlaced","console","log","setShips","useState","ship4","orientation","size","reference","useRef","position","x","y","neighbors","map","ship3_1","ship3_2","ship2_1","ship2_2","ship2_3","ship1_1","ship1_2","ship1_3","ship1_4","shipDivs","push","e","current","style","display","setTimeout","currentShipRef","diffX","clientX","diffY","clientY","grabXRef","parseInt","grabYRef","handleMouseClick","preventDefault","left","top","width","height","border","cursor","right"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"./components/Grid.js\";\n\nconst gridSize = 20;\n\n\n\nfunction App() {\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return console.log(\"Not all ships placed\");\n    }\n    console.log(\"field is ready for game!\");\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: { x: 10, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship3_1: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: { x: 100, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship3_2: {\n      orientation: \"horizontal\",\n      size: 3,\n      reference: React.useRef(),\n      position: { x: 100, y: 280 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship2_1: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: { x: 170, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship2_2: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: { x: 170, y: 260 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship2_3: {\n      orientation: \"horizontal\",\n      size: 2,\n      reference: React.useRef(),\n      position: { x: 170, y: 310 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_1: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 210 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_2: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 240 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_3: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 270 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n    ship1_4: {\n      orientation: \"horizontal\",\n      size: 1,\n      reference: React.useRef(),\n      position: { x: 220, y: 300 },\n      neighbors: [],\n      map: [],\n      isPlaced: false,\n    },\n  });\n\n  let shipDivs = [];\n\n  for (const ship in ships) {\n    shipDivs.push(\n      <div\n        ref={ships[ship].reference}\n        key={ship}\n        className={ship}\n        draggable\n        onDragEnd={(e) =>\n          (ships[ship].reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships[ship].reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = ship;\n          const diffX = e.clientX - ships[ship].position.x;\n          const diffY = e.clientY - ships[ship].position.y;\n          grabXRef.current = parseInt(diffX / gridSize);\n          grabYRef.current = parseInt(diffY / gridSize);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, ship)}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships[ship].position.x,\n          top: ships[ship].position.y,\n          width: (() => {\n            switch (ships[ship].orientation) {\n              case \"horizontal\":\n                return `${gridSize * ships[ship].size - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships[ship].orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${gridSize * ships[ship].size - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n    );\n  }\n\n  const currentShipRef = React.useRef();\n  const grabXRef = React.useRef();\n  const grabYRef = React.useRef();\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        width: \"500px\",\n        height: \"500px\",\n      }}\n    >\n      {shipDivs}\n      <button style={{ position: \"absolute\", right: 0 }} onClick={readyCheck}>\n        Ready\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n"]},"metadata":{},"sourceType":"module"}