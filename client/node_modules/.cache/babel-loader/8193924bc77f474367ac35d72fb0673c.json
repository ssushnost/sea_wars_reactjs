{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win\\\\Desktop\\\\seawars-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet grid = [];\n\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nfunction App() {\n  _s();\n\n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n\n    function handleDrop(e, gridCellRow, gridCellColumn) {\n      e.stopPropagation();\n      e.preventDefault();\n      let boolean = false; // я забыл как это работает помогите...\n\n      const colForBool = Math.floor((gridCellColumn * 20 + 8 - diffXRef.current * 20) / 20);\n      const rowForBool = Math.floor((gridCellRow * 20 + 8 - diffYRef.current * 20) / 20);\n\n      if (ships[currentShipRef.current].orientation === \"horizontal\") {\n        if (colForBool > 6 || colForBool < 0) {\n          ships[currentShipRef.current].reference.current.style.borderColor = \"red\";\n          setTimeout(() => ships[currentShipRef.current].reference.current.style.borderColor = \"blue\", 500);\n          boolean = true;\n        }\n      } else if (ships[currentShipRef.current].orientation === \"vertical\") {\n        if (rowForBool > 6 || rowForBool < 0) {\n          ships[currentShipRef.current].reference.current.style.borderColor = \"red\";\n          setTimeout(() => ships[currentShipRef.current].reference.current.style.borderColor = \"blue\", 500);\n          boolean = true;\n        }\n      }\n\n      if (!boolean) {\n        //string eg. \"ship4\"\n        let ship = currentShipRef.current;\n        let shipSize = ships[ship].size;\n        let shipOrientation = ships[ship].orientation;\n        let shipsCopy = Object.assign({}, ships);\n        shipsCopy[ship].position.x = gridCellColumn * 20 + 8 - diffXRef.current * 20;\n        shipsCopy[ship].position.y = gridCellRow * 20 + 8 - diffYRef.current * 20;\n        let newMap = [];\n        let col = parseInt(shipsCopy[ship].position.x / 20, 10);\n        let row = parseInt(shipsCopy[ship].position.y / 20, 10);\n\n        for (let i = 0; i < shipSize; i++) {\n          switch (shipOrientation) {\n            case \"vertical\":\n              newMap.push([row + i, col]);\n              break;\n\n            case \"horizontal\":\n              newMap.push([row, col + i]);\n              break;\n\n            default:\n              console.warn(\"ship have wrong orientation\");\n          }\n        }\n\n        shipsCopy[ship].map = newMap;\n        shipsCopy[ship].isPlaced = true;\n        setShips(shipsCopy);\n      }\n\n      return false;\n    }\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: {\n        x: 10,\n        y: 210\n      },\n      map: [],\n      isPlaced: false\n    }\n  });\n  const currentShipRef = React.useRef();\n  const diffXRef = React.useRef();\n  const diffYRef = React.useRef();\n\n  function handleMouseClick(e, ship) {\n    if (e.button !== 2) return;\n    let shipsCopy = Object.assign({}, ships);\n\n    if (ships[ship].isPlaced) {\n      var row = ships[ship].map[0][0];\n      var col = ships[ship].map[0][1];\n\n      switch (ships[ship].orientation) {\n        case \"vertical\":\n          if (col > 6) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(() => ships[ship].reference.current.style.borderColor = \"blue\", 500);\n            return;\n          }\n\n          break;\n\n        case \"horizontal\":\n          if (row > 6) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(() => ships[ship].reference.current.style.borderColor = \"blue\", 500);\n            return;\n          }\n\n          break;\n\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n\n      shipsCopy[ship].map = [];\n    }\n\n    switch (shipsCopy[ship].orientation) {\n      case \"horizontal\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row + i, col]);\n          }\n        }\n\n        shipsCopy[ship].orientation = \"vertical\";\n        break;\n\n      case \"vertical\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row, col + i]);\n          }\n        }\n\n        shipsCopy[ship].orientation = \"horizontal\";\n        break;\n\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n\n    console.dir(ships);\n    setShips(shipsCopy);\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return false;\n      console.log(\"field is ready for game!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: \"blanchedalmond\",\n      width: \"500px\",\n      height: \"500px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GridContainer\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(10,20px)\",\n        backgroundColor: \"lightblue\"\n      },\n      children: grid.map((row, i) => row.map((col, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spot\",\n        onDragStart: e => e.preventDefault(),\n        onDragOver: e => {\n          e.preventDefault();\n          return false;\n        },\n        onDrop: e => handleDrop(e, i, j),\n        style: {\n          backgroundColor: \"white\",\n          height: \"18px\",\n          width: \"18px\",\n          border: \"solid 1px black\"\n        }\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ships.ship4.reference,\n      className: \"ship4\",\n      draggable: true,\n      onDragEnd: e => ships.ship4.reference.current.style.display = \"inline\",\n      onDragStart: e => {\n        setTimeout(() => ships.ship4.reference.current.style.display = \"none\");\n        currentShipRef.current = \"ship4\";\n        const diffX = e.clientX - ships.ship4.position.x;\n        const diffY = e.clientY - ships.ship4.position.y;\n        diffXRef.current = parseInt(diffX / 20);\n        diffYRef.current = parseInt(diffY / 20);\n      },\n      onMouseUp: e => setTimeout(handleMouseClick, 0, e, \"ship4\"),\n      onContextMenu: e => e.preventDefault(),\n      style: {\n        position: \"absolute\",\n        left: ships.ship4.position.x,\n        top: ships.ship4.position.y,\n        width: (() => {\n          switch (ships.ship4.orientation) {\n            case \"horizontal\":\n              return `${20 * 4 - 4}px`;\n\n            case \"vertical\":\n              return \"16px\";\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        height: (() => {\n          switch (ships.ship4.orientation) {\n            case \"horizontal\":\n              return \"16px\";\n\n            case \"vertical\":\n              return `${20 * 4 - 4}px`;\n\n            default:\n              return \"100px\";\n          }\n        })(),\n        border: \"solid 2px blue\",\n        cursor: \"grab\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: readyCheck,\n      children: \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7zwaqJN/8K0ohNNyMch92a9WBzc=\");\n\n_c = App;\nexport default App; // .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n// .div {\n//   position: relative;\n// }\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/win/Desktop/seawars-react/src/App.js"],"names":["React","grid","i","push","Array","from","App","deepListCopy","l","JSON","parse","stringify","handleDrop","e","gridCellRow","gridCellColumn","stopPropagation","preventDefault","boolean","colForBool","Math","floor","diffXRef","current","rowForBool","diffYRef","ships","currentShipRef","orientation","reference","style","borderColor","setTimeout","ship","shipSize","size","shipOrientation","shipsCopy","Object","assign","position","x","y","newMap","col","parseInt","row","console","warn","map","isPlaced","setShips","useState","ship4","useRef","handleMouseClick","button","dir","readyCheck","log","backgroundColor","width","height","display","gridTemplateColumns","j","border","diffX","clientX","diffY","clientY","left","top","cursor","right"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,IAAI,GAAG,EAAX;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6BD,IAAI,CAACE,IAAL,CAAUC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAhB,EAAsB,MAAM,CAA5B,CAAV;;AAE7B,SAASE,GAAT,GAAe;AAAA;;AAEb,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,CAAf,CAAX,CAAP;;AACA,aAASI,UAAT,CAAoBC,CAApB,EAAuBC,WAAvB,EAAoCC,cAApC,EAAoD;AAClDF,MAAAA,CAAC,CAACG,eAAF;AACAH,MAAAA,CAAC,CAACI,cAAF;AACA,UAAIC,OAAO,GAAG,KAAd,CAHkD,CAIlD;;AACA,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CACjB,CAACN,cAAc,GAAG,EAAjB,GAAsB,CAAtB,GAA0BO,QAAQ,CAACC,OAAT,GAAmB,EAA9C,IAAoD,EADnC,CAAnB;AAGA,YAAMC,UAAU,GAAGJ,IAAI,CAACC,KAAL,CACjB,CAACP,WAAW,GAAG,EAAd,GAAmB,CAAnB,GAAuBW,QAAQ,CAACF,OAAT,GAAmB,EAA3C,IAAiD,EADhC,CAAnB;;AAGA,UAAIG,KAAK,CAACC,cAAc,CAACJ,OAAhB,CAAL,CAA8BK,WAA9B,KAA8C,YAAlD,EAAgE;AAC9D,YAAIT,UAAU,GAAG,CAAb,IAAkBA,UAAU,GAAG,CAAnC,EAAsC;AACpCO,UAAAA,KAAK,CAACC,cAAc,CAACJ,OAAhB,CAAL,CAA8BM,SAA9B,CAAwCN,OAAxC,CAAgDO,KAAhD,CAAsDC,WAAtD,GACE,KADF;AAEAC,UAAAA,UAAU,CACR,MACGN,KAAK,CAACC,cAAc,CAACJ,OAAhB,CAAL,CAA8BM,SAA9B,CAAwCN,OAAxC,CAAgDO,KAAhD,CAAsDC,WAAtD,GACC,MAHI,EAIR,GAJQ,CAAV;AAMAb,UAAAA,OAAO,GAAG,IAAV;AACD;AACF,OAZD,MAYO,IAAIQ,KAAK,CAACC,cAAc,CAACJ,OAAhB,CAAL,CAA8BK,WAA9B,KAA8C,UAAlD,EAA8D;AACnE,YAAIJ,UAAU,GAAG,CAAb,IAAkBA,UAAU,GAAG,CAAnC,EAAsC;AACpCE,UAAAA,KAAK,CAACC,cAAc,CAACJ,OAAhB,CAAL,CAA8BM,SAA9B,CAAwCN,OAAxC,CAAgDO,KAAhD,CAAsDC,WAAtD,GACE,KADF;AAEAC,UAAAA,UAAU,CACR,MACGN,KAAK,CAACC,cAAc,CAACJ,OAAhB,CAAL,CAA8BM,SAA9B,CAAwCN,OAAxC,CAAgDO,KAAhD,CAAsDC,WAAtD,GACC,MAHI,EAIR,GAJQ,CAAV;AAMAb,UAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AACD,UAAI,CAACA,OAAL,EAAc;AACZ;AACA,YAAIe,IAAI,GAAGN,cAAc,CAACJ,OAA1B;AACA,YAAIW,QAAQ,GAAGR,KAAK,CAACO,IAAD,CAAL,CAAYE,IAA3B;AACA,YAAIC,eAAe,GAAGV,KAAK,CAACO,IAAD,CAAL,CAAYL,WAAlC;AACA,YAAIS,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,KAAlB,CAAhB;AACAW,QAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBO,QAAhB,CAAyBC,CAAzB,GACE1B,cAAc,GAAG,EAAjB,GAAsB,CAAtB,GAA0BO,QAAQ,CAACC,OAAT,GAAmB,EAD/C;AAEAc,QAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBO,QAAhB,CAAyBE,CAAzB,GAA6B5B,WAAW,GAAG,EAAd,GAAmB,CAAnB,GAAuBW,QAAQ,CAACF,OAAT,GAAmB,EAAvE;AACA,YAAIoB,MAAM,GAAG,EAAb;AACA,YAAIC,GAAG,GAAGC,QAAQ,CAACR,SAAS,CAACJ,IAAD,CAAT,CAAgBO,QAAhB,CAAyBC,CAAzB,GAA6B,EAA9B,EAAkC,EAAlC,CAAlB;AACA,YAAIK,GAAG,GAAGD,QAAQ,CAACR,SAAS,CAACJ,IAAD,CAAT,CAAgBO,QAAhB,CAAyBE,CAAzB,GAA6B,EAA9B,EAAkC,EAAlC,CAAlB;;AACA,aAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,QAApB,EAA8BhC,CAAC,EAA/B,EAAmC;AACjC,kBAAQkC,eAAR;AACE,iBAAK,UAAL;AACEO,cAAAA,MAAM,CAACxC,IAAP,CAAY,CAAC2C,GAAG,GAAG5C,CAAP,EAAU0C,GAAV,CAAZ;AACA;;AACF,iBAAK,YAAL;AACED,cAAAA,MAAM,CAACxC,IAAP,CAAY,CAAC2C,GAAD,EAAMF,GAAG,GAAG1C,CAAZ,CAAZ;AACA;;AACF;AACE6C,cAAAA,OAAO,CAACC,IAAR,CAAa,6BAAb;AARJ;AAUD;;AACDX,QAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBgB,GAAhB,GAAsBN,MAAtB;AACAN,QAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBiB,QAAhB,GAA2B,IAA3B;AACAC,QAAAA,QAAQ,CAACd,SAAD,CAAR;AACD;;AACD,aAAO,KAAP;AACD;AACF;;AAED,QAAM,CAACX,KAAD,EAAQyB,QAAR,IAAoBnD,KAAK,CAACoD,QAAN,CAAe;AACvCC,IAAAA,KAAK,EAAE;AACLzB,MAAAA,WAAW,EAAE,YADR;AAELO,MAAAA,IAAI,EAAE,CAFD;AAGLN,MAAAA,SAAS,EAAE7B,KAAK,CAACsD,MAAN,EAHN;AAILd,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,EAAL;AAASC,QAAAA,CAAC,EAAE;AAAZ,OAJL;AAKLO,MAAAA,GAAG,EAAE,EALA;AAMLC,MAAAA,QAAQ,EAAE;AANL;AADgC,GAAf,CAA1B;AAWA,QAAMvB,cAAc,GAAG3B,KAAK,CAACsD,MAAN,EAAvB;AAEA,QAAMhC,QAAQ,GAAGtB,KAAK,CAACsD,MAAN,EAAjB;AACA,QAAM7B,QAAQ,GAAGzB,KAAK,CAACsD,MAAN,EAAjB;;AAIA,WAASC,gBAAT,CAA0B1C,CAA1B,EAA6BoB,IAA7B,EAAmC;AACjC,QAAIpB,CAAC,CAAC2C,MAAF,KAAa,CAAjB,EAAoB;AACpB,QAAInB,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,KAAlB,CAAhB;;AACA,QAAIA,KAAK,CAACO,IAAD,CAAL,CAAYiB,QAAhB,EAA0B;AACxB,UAAIJ,GAAG,GAAGpB,KAAK,CAACO,IAAD,CAAL,CAAYgB,GAAZ,CAAgB,CAAhB,EAAmB,CAAnB,CAAV;AACA,UAAIL,GAAG,GAAGlB,KAAK,CAACO,IAAD,CAAL,CAAYgB,GAAZ,CAAgB,CAAhB,EAAmB,CAAnB,CAAV;;AACA,cAAQvB,KAAK,CAACO,IAAD,CAAL,CAAYL,WAApB;AACE,aAAK,UAAL;AACE,cAAIgB,GAAG,GAAG,CAAV,EAAa;AACXlB,YAAAA,KAAK,CAACO,IAAD,CAAL,CAAYJ,SAAZ,CAAsBN,OAAtB,CAA8BO,KAA9B,CAAoCC,WAApC,GAAkD,KAAlD;AACAC,YAAAA,UAAU,CACR,MAAON,KAAK,CAACO,IAAD,CAAL,CAAYJ,SAAZ,CAAsBN,OAAtB,CAA8BO,KAA9B,CAAoCC,WAApC,GAAkD,MADjD,EAER,GAFQ,CAAV;AAIA;AACD;;AACD;;AACF,aAAK,YAAL;AACE,cAAIe,GAAG,GAAG,CAAV,EAAa;AACXpB,YAAAA,KAAK,CAACO,IAAD,CAAL,CAAYJ,SAAZ,CAAsBN,OAAtB,CAA8BO,KAA9B,CAAoCC,WAApC,GAAkD,KAAlD;AACAC,YAAAA,UAAU,CACR,MAAON,KAAK,CAACO,IAAD,CAAL,CAAYJ,SAAZ,CAAsBN,OAAtB,CAA8BO,KAA9B,CAAoCC,WAApC,GAAkD,MADjD,EAER,GAFQ,CAAV;AAIA;AACD;;AACD;;AACF;AACEgB,UAAAA,OAAO,CAACC,IAAR,CAAa,6CAAb;AAtBJ;;AAwBAX,MAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBgB,GAAhB,GAAsB,EAAtB;AACD;;AACD,YAAQZ,SAAS,CAACJ,IAAD,CAAT,CAAgBL,WAAxB;AACE,WAAK,YAAL;AACE,YAAIF,KAAK,CAACO,IAAD,CAAL,CAAYiB,QAAhB,EAA0B;AACxB,eAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,KAAK,CAACO,IAAD,CAAL,CAAYE,IAAhC,EAAsCjC,CAAC,EAAvC,EAA2C;AACzCmC,YAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBgB,GAAhB,CAAoB9C,IAApB,CAAyB,CAAC2C,GAAG,GAAG5C,CAAP,EAAU0C,GAAV,CAAzB;AACD;AACF;;AACDP,QAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBL,WAAhB,GAA8B,UAA9B;AACA;;AACF,WAAK,UAAL;AACE,YAAIF,KAAK,CAACO,IAAD,CAAL,CAAYiB,QAAhB,EAA0B;AACxB,eAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,KAAK,CAACO,IAAD,CAAL,CAAYE,IAAhC,EAAsCjC,CAAC,EAAvC,EAA2C;AACzCmC,YAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBgB,GAAhB,CAAoB9C,IAApB,CAAyB,CAAC2C,GAAD,EAAMF,GAAG,GAAG1C,CAAZ,CAAzB;AACD;AACF;;AACDmC,QAAAA,SAAS,CAACJ,IAAD,CAAT,CAAgBL,WAAhB,GAA8B,YAA9B;AACA;;AACF;AACEmB,QAAAA,OAAO,CAACC,IAAR,CAAa,+BAAb;AAlBJ;;AAoBAD,IAAAA,OAAO,CAACU,GAAR,CAAY/B,KAAZ;AACAyB,IAAAA,QAAQ,CAACd,SAAD,CAAR;AACD;;AAED,WAASqB,UAAT,GAAsB;AACpB,SAAK,MAAMzB,IAAX,IAAmBP,KAAnB,EAA0B;AACxB,UAAI,CAACA,KAAK,CAACO,IAAD,CAAL,CAAYiB,QAAjB,EAA2B,OAAO,KAAP;AAC3BH,MAAAA,OAAO,CAACY,GAAR,CAAY,0BAAZ;AACD;AACF;;AACD,sBACE;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,gBADZ;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH,KAFT;AAAA,4BAQE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,mBAAmB,EAAE,iBAFhB;AAGLJ,QAAAA,eAAe,EAAE;AAHZ,OAFT;AAAA,gBAQG3D,IAAI,CAACgD,GAAL,CAAS,CAACH,GAAD,EAAM5C,CAAN,KACR4C,GAAG,CAACG,GAAJ,CAAQ,CAACL,GAAD,EAAMqB,CAAN,kBACN;AACE,QAAA,SAAS,EAAC,MADZ;AAGE,QAAA,WAAW,EAAGpD,CAAD,IAAOA,CAAC,CAACI,cAAF,EAHtB;AAIE,QAAA,UAAU,EAAGJ,CAAD,IAAO;AACjBA,UAAAA,CAAC,CAACI,cAAF;AACA,iBAAO,KAAP;AACD,SAPH;AAQE,QAAA,MAAM,EAAGJ,CAAD,IAAOD,UAAU,CAACC,CAAD,EAAIX,CAAJ,EAAO+D,CAAP,CAR3B;AASE,QAAA,KAAK,EAAE;AACLL,UAAAA,eAAe,EAAE,OADZ;AAELE,UAAAA,MAAM,EAAE,MAFH;AAGLD,UAAAA,KAAK,EAAE,MAHF;AAILK,UAAAA,MAAM,EAAE;AAJH;AATT,SAEQ,GAAEhE,CAAE,IAAG+D,CAAE,EAFjB;AAAA;AAAA;AAAA;AAAA,cADF,CADD;AARH;AAAA;AAAA;AAAA;AAAA,YARF,eAqCE;AACE,MAAA,GAAG,EAAEvC,KAAK,CAAC2B,KAAN,CAAYxB,SADnB;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,SAAS,EAAGhB,CAAD,IACRa,KAAK,CAAC2B,KAAN,CAAYxB,SAAZ,CAAsBN,OAAtB,CAA8BO,KAA9B,CAAoCiC,OAApC,GAA8C,QALnD;AAOE,MAAA,WAAW,EAAGlD,CAAD,IAAO;AAClBmB,QAAAA,UAAU,CACR,MAAON,KAAK,CAAC2B,KAAN,CAAYxB,SAAZ,CAAsBN,OAAtB,CAA8BO,KAA9B,CAAoCiC,OAApC,GAA8C,MAD7C,CAAV;AAGApC,QAAAA,cAAc,CAACJ,OAAf,GAAyB,OAAzB;AACA,cAAM4C,KAAK,GAAGtD,CAAC,CAACuD,OAAF,GAAY1C,KAAK,CAAC2B,KAAN,CAAYb,QAAZ,CAAqBC,CAA/C;AACA,cAAM4B,KAAK,GAAGxD,CAAC,CAACyD,OAAF,GAAY5C,KAAK,CAAC2B,KAAN,CAAYb,QAAZ,CAAqBE,CAA/C;AACApB,QAAAA,QAAQ,CAACC,OAAT,GAAmBsB,QAAQ,CAACsB,KAAK,GAAG,EAAT,CAA3B;AACA1C,QAAAA,QAAQ,CAACF,OAAT,GAAmBsB,QAAQ,CAACwB,KAAK,GAAG,EAAT,CAA3B;AACD,OAhBH;AAiBE,MAAA,SAAS,EAAGxD,CAAD,IAAOmB,UAAU,CAACuB,gBAAD,EAAmB,CAAnB,EAAsB1C,CAAtB,EAAyB,OAAzB,CAjB9B;AAkBE,MAAA,aAAa,EAAGA,CAAD,IAAOA,CAAC,CAACI,cAAF,EAlBxB;AAmBE,MAAA,KAAK,EAAE;AACLuB,QAAAA,QAAQ,EAAE,UADL;AAEL+B,QAAAA,IAAI,EAAE7C,KAAK,CAAC2B,KAAN,CAAYb,QAAZ,CAAqBC,CAFtB;AAGL+B,QAAAA,GAAG,EAAE9C,KAAK,CAAC2B,KAAN,CAAYb,QAAZ,CAAqBE,CAHrB;AAILmB,QAAAA,KAAK,EAAE,CAAC,MAAM;AACZ,kBAAQnC,KAAK,CAAC2B,KAAN,CAAYzB,WAApB;AACE,iBAAK,YAAL;AACE,qBAAQ,GAAE,KAAK,CAAL,GAAS,CAAE,IAArB;;AACF,iBAAK,UAAL;AACE,qBAAO,MAAP;;AACF;AACE,qBAAO,OAAP;AANJ;AAQD,SATM,GAJF;AAcLkC,QAAAA,MAAM,EAAE,CAAC,MAAM;AACb,kBAAQpC,KAAK,CAAC2B,KAAN,CAAYzB,WAApB;AACE,iBAAK,YAAL;AACE,qBAAO,MAAP;;AACF,iBAAK,UAAL;AACE,qBAAQ,GAAE,KAAK,CAAL,GAAS,CAAE,IAArB;;AACF;AACE,qBAAO,OAAP;AANJ;AAQD,SATO,GAdH;AAwBLsC,QAAAA,MAAM,EAAE,gBAxBH;AAyBLO,QAAAA,MAAM,EAAE;AAzBH;AAnBT;AAAA;AAAA;AAAA;AAAA,YArCF,eAoFE;AAAQ,MAAA,KAAK,EAAE;AAAEjC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBkC,QAAAA,KAAK,EAAE;AAA/B,OAAf;AAAmD,MAAA,OAAO,EAAEhB,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0FD;;GAlPQpD,G;;KAAAA,G;AAoPT,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n\nlet grid = [];\nfor (let i = 0; i < 10; i++) grid.push(Array.from(Array(10), () => 0));\n\nfunction App() {\n  \n  function deepListCopy(l) {\n    return JSON.parse(JSON.stringify(l));\n    function handleDrop(e, gridCellRow, gridCellColumn) {\n      e.stopPropagation();\n      e.preventDefault();\n      let boolean = false;\n      // я забыл как это работает помогите...\n      const colForBool = Math.floor(\n        (gridCellColumn * 20 + 8 - diffXRef.current * 20) / 20\n      );\n      const rowForBool = Math.floor(\n        (gridCellRow * 20 + 8 - diffYRef.current * 20) / 20\n      );\n      if (ships[currentShipRef.current].orientation === \"horizontal\") {\n        if (colForBool > 6 || colForBool < 0) {\n          ships[currentShipRef.current].reference.current.style.borderColor =\n            \"red\";\n          setTimeout(\n            () =>\n              (ships[currentShipRef.current].reference.current.style.borderColor =\n                \"blue\"),\n            500\n          );\n          boolean = true;\n        }\n      } else if (ships[currentShipRef.current].orientation === \"vertical\") {\n        if (rowForBool > 6 || rowForBool < 0) {\n          ships[currentShipRef.current].reference.current.style.borderColor =\n            \"red\";\n          setTimeout(\n            () =>\n              (ships[currentShipRef.current].reference.current.style.borderColor =\n                \"blue\"),\n            500\n          );\n          boolean = true;\n        }\n      }\n      if (!boolean) {\n        //string eg. \"ship4\"\n        let ship = currentShipRef.current;\n        let shipSize = ships[ship].size;\n        let shipOrientation = ships[ship].orientation;\n        let shipsCopy = Object.assign({}, ships);\n        shipsCopy[ship].position.x =\n          gridCellColumn * 20 + 8 - diffXRef.current * 20;\n        shipsCopy[ship].position.y = gridCellRow * 20 + 8 - diffYRef.current * 20;\n        let newMap = [];\n        let col = parseInt(shipsCopy[ship].position.x / 20, 10);\n        let row = parseInt(shipsCopy[ship].position.y / 20, 10);\n        for (let i = 0; i < shipSize; i++) {\n          switch (shipOrientation) {\n            case \"vertical\":\n              newMap.push([row + i, col]);\n              break;\n            case \"horizontal\":\n              newMap.push([row, col + i]);\n              break;\n            default:\n              console.warn(\"ship have wrong orientation\");\n          }\n        }\n        shipsCopy[ship].map = newMap;\n        shipsCopy[ship].isPlaced = true;\n        setShips(shipsCopy);\n      }\n      return false;\n    }\n  }\n\n  const [ships, setShips] = React.useState({\n    ship4: {\n      orientation: \"horizontal\",\n      size: 4,\n      reference: React.useRef(),\n      position: { x: 10, y: 210 },\n      map: [],\n      isPlaced: false,\n    },\n  });\n\n  const currentShipRef = React.useRef();\n\n  const diffXRef = React.useRef();\n  const diffYRef = React.useRef();\n\n\n\n  function handleMouseClick(e, ship) {\n    if (e.button !== 2) return;\n    let shipsCopy = Object.assign({}, ships);\n    if (ships[ship].isPlaced) {\n      var row = ships[ship].map[0][0];\n      var col = ships[ship].map[0][1];\n      switch (ships[ship].orientation) {\n        case \"vertical\":\n          if (col > 6) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(\n              () => (ships[ship].reference.current.style.borderColor = \"blue\"),\n              500\n            );\n            return;\n          }\n          break;\n        case \"horizontal\":\n          if (row > 6) {\n            ships[ship].reference.current.style.borderColor = \"red\";\n            setTimeout(\n              () => (ships[ship].reference.current.style.borderColor = \"blue\"),\n              500\n            );\n            return;\n          }\n          break;\n        default:\n          console.warn(\"wrong ship orientation in start rmb handler\");\n      }\n      shipsCopy[ship].map = [];\n    }\n    switch (shipsCopy[ship].orientation) {\n      case \"horizontal\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row + i, col]);\n          }\n        }\n        shipsCopy[ship].orientation = \"vertical\";\n        break;\n      case \"vertical\":\n        if (ships[ship].isPlaced) {\n          for (let i = 0; i < ships[ship].size; i++) {\n            shipsCopy[ship].map.push([row, col + i]);\n          }\n        }\n        shipsCopy[ship].orientation = \"horizontal\";\n        break;\n      default:\n        console.warn(\"wrong ship orientation in rmb\");\n    }\n    console.dir(ships);\n    setShips(shipsCopy);\n  }\n\n  function readyCheck() {\n    for (const ship in ships) {\n      if (!ships[ship].isPlaced) return false;\n      console.log(\"field is ready for game!\");\n    }\n  }\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundColor: \"blanchedalmond\",\n        width: \"500px\",\n        height: \"500px\",\n      }}\n    >\n      <div\n        className=\"GridContainer\"\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(10,20px)\",\n          backgroundColor: \"lightblue\",\n        }}\n      >\n        {grid.map((row, i) =>\n          row.map((col, j) => (\n            <div\n              className=\"spot\"\n              key={`${i}-${j}`}\n              onDragStart={(e) => e.preventDefault()}\n              onDragOver={(e) => {\n                e.preventDefault();\n                return false;\n              }}\n              onDrop={(e) => handleDrop(e, i, j)}\n              style={{\n                backgroundColor: \"white\",\n                height: \"18px\",\n                width: \"18px\",\n                border: \"solid 1px black\",\n              }}\n            />\n          ))\n        )}\n      </div>\n      <div\n        ref={ships.ship4.reference}\n        className=\"ship4\"\n        draggable\n        onDragEnd={(e) =>\n          (ships.ship4.reference.current.style.display = \"inline\")\n        }\n        onDragStart={(e) => {\n          setTimeout(\n            () => (ships.ship4.reference.current.style.display = \"none\")\n          );\n          currentShipRef.current = \"ship4\";\n          const diffX = e.clientX - ships.ship4.position.x;\n          const diffY = e.clientY - ships.ship4.position.y;\n          diffXRef.current = parseInt(diffX / 20);\n          diffYRef.current = parseInt(diffY / 20);\n        }}\n        onMouseUp={(e) => setTimeout(handleMouseClick, 0, e, \"ship4\")}\n        onContextMenu={(e) => e.preventDefault()}\n        style={{\n          position: \"absolute\",\n          left: ships.ship4.position.x,\n          top: ships.ship4.position.y,\n          width: (() => {\n            switch (ships.ship4.orientation) {\n              case \"horizontal\":\n                return `${20 * 4 - 4}px`;\n              case \"vertical\":\n                return \"16px\";\n              default:\n                return \"100px\";\n            }\n          })(),\n          height: (() => {\n            switch (ships.ship4.orientation) {\n              case \"horizontal\":\n                return \"16px\";\n              case \"vertical\":\n                return `${20 * 4 - 4}px`;\n              default:\n                return \"100px\";\n            }\n          })(),\n          border: \"solid 2px blue\",\n          cursor: \"grab\",\n        }}\n      ></div>\n      <button style={{ position: \"absolute\", right: 0 }} onClick={readyCheck}>\n        Ready\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"X\";\n//   width: 50px;\n//   height: 50px;\n//   background-repeat: no-repeat;\n//   background-position: 75% 40%;\n// .App {\n//   font-family: sans-serif;\n//   text-align: center;\n// }\n\n// .div {\n//   position: relative;\n// }\n\n// .div::after {\n//   position: absolute;\n//   content: \"\";\n//   width: 50px;\n//   height: 50px;\n//   background: url(\"https://memepedia.ru/wp-content/uploads/2022/01/krutye-skelety-mem-3.jpg\");\n// }\n"]},"metadata":{},"sourceType":"module"}